DCP = new Object()

var cacheModule={} // require 관련 변수

function require(src,force){
    if(!force && cacheModule[src]!=undefined){
        return cacheModule[src];
    }
    else{
        var module = {exports:{}}
        var exports=module.exports
        eval(readFile("node_modules/"+src))
        cacheModule[src] = module.exports;
        return module.exports
    }
}

D = require("DBManager.js")
var myDB = android.database.sqlite.SQLiteDatabase.openDatabase("/sdcard/katalkbot/Bots/main/DB", null, android.database.sqlite.SQLiteDatabase.CREATE_IF_NECESSARY);



DCP.UOSP = function UOSP(){ // 시갤 파싱
    let str = ""
    let SW_new = 0; // 새로운 공지가 파싱되었을 경우 1이됨

    let parse = org.jsoup.Jsoup.connect("http://www.uos.ac.kr/korNotice/list.do?list_id=FA1").get().select("ul.listType>li:not(.on)>a").get(0) // 파싱 데이터 (상위공지)
    let title = parse.ownText() // 글 제목
    let adress = parse.attr("onclick").split("'")[3] // 글 주소


    if (title == "" || title == "MIWIFI" || title == undefined) { // 오류일시 종료
        return 0;
    }
    // DB구조 : [[공지제목,공지주소,날짜],[공지제목,공지주소,날짜]]
    let temp = JSON.parse(UOSP.getDB("UOSP1_DB"))
    let pre_DB = temp[temp.length-1] // 이전 DB 마지막 부분
    if ( pre_DB[0] != title.replaceAmp()) { // 새로운 내용이 파싱되었을 경우
        UOSP.UOSP1_collect(Number(pre_DB[1])+1,adress) // DB 기록작업
        SW_new = 1
    }

    if (SW_new == 1) {
        str += "일반 공지가 새로 게시되었습니다\n"
        str += title

        for(let i=0;i<roomListNum;i++){
            UOSP.sendKalingImage(roomList[i],
                "",
                "http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq=" + adress
                ,str,"보러가기",0,0)
        }
    }
}
// https://gall.dcinside.com/board/view/?id=uos&no=1
// DB구조 예시: [[제목,주소,날짜,작성자],[제목,주소,날짜,작성자]]
// 마지막 DB : JSON.parse(DCP.getDB("DCP_DB"))[JSON.parse(DCP.getDB("DCP_DB")).length-1]
// 검색코드 예시 : JSON.parse(UOSP.getDB("UOSP1_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes("전자"))
// 검색코드 예시 : JSON.parse(DCP.getDB("DCP_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes("시립")).sort(function(a,b){return Number(a[1])>Number(b[1]) ? -1 : Number(a[1]) < Number(b[1]) ? 1 : 0}).map(v=>"제목 : "+v[0]+" \n작성자 : "+v[3]+" ("+v[2]+")\n- "+"https://gall.dcinside.com/board/view/?id=uos&no="+v[1]+"\n\n").join("").trim()
DCP.DCP_collect = function DCP_collect(start_num,stop_num){

    let count_sucess = 0
    let count_failed = 0

    var pre_DB = JSON.parse(DCP.getDB("DCP_DB")) // DB 읽기 작업
    for(let i=start_num;i<stop_num+1;i++){
        try{
            let body = org.jsoup.Jsoup.connect("https://gall.dcinside.com/board/view/?id=uos&no="+i).get()
            let title = body.select(".gallview_head>.title>.title_subject").get(0).ownText() // 글 제목

            try{ var writer = body.select(".gallview_head>.gall_writer>.fl>.nickname>em").get(0).ownText() }
            catch(e){ var writer = body.select(".gallview_head>.gall_writer>.fl>b>b").get(0).ownText() } // 작성자

            let date = body.select(".gallview_head>.gall_writer>.fl>.gall_date").get(0).ownText() // 글 게시일

            let array = [[title.replaceAmp()],[i],[date],[writer]]
            // 초기 DB 세팅 코드 : DCP.setDB("DCP_DB",JSON.stringify([]))

            pre_DB.push(array)


            if(i%50==0){
                Api.replyRoom(console_room_name,i+"번 주소까지 진행 완료")
                DCP.setDB("DCP_DB",JSON.stringify(pre_DB)) // DB 쓰기 작업
                pre_DB = JSON.parse(DCP.getDB("DCP_DB")) // DB 읽기 작업
                java.lang.Thread.sleep(10000) // 200ms
            }
            count_sucess++
            java.lang.Thread.sleep(1000) // 200ms

        }
        catch(e){count_failed++} // 해당 주소에 아무런 내용이 존재하지 않을 경우 아무것도 하지 않음
    }
    DCP.setDB("DCP_DB",JSON.stringify(pre_DB)) // DB 쓰기 작업
    return("성공 : "+count_sucess+"\n실패 : "+count_failed)

}


// 테이블 생성 : myDB.execSQL("create table DCPTable (k text PRIMARY KEY, v text);");

DCP.setDB = function setDB(key,value){
    if(D.selectForArray("DCPTable", null, "k like ?", key).length == 0){ // 해당하는 key에 value가 없는 경우
        D.insert("DCPTable",{k:key, v:value})
    }
    else{ // 해당하는 key에 value가 있는 경우
        D.update("DCPTable", {v:value}, "k=?", [key])
    }
}

DCP.getDB = function getDB(key){
    var arr = D.selectForArray("DCPTable", null, "k=?", [key]);
    if (arr.length > 0) {
        return arr[0][1];
    } else {
        return undefined;
    }
}

DCP.getNum = function getNum(key) {
    var value = DCP.getDB(key);
    return isNaN(value) ? 0 : Number(DCP.getDB(key));
}


module.exports = DCP