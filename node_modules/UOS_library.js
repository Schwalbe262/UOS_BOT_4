UOS_library = new Object()

var cacheModule={} // require 관련 변수

function require(src,force){
    if(!force && cacheModule[src]!=undefined){
        return cacheModule[src];
    }
    else{
        var module = {exports:{}}
        var exports=module.exports
        eval(readFile("node_modules/"+src))
        cacheModule[src] = module.exports;
        return module.exports
    }
}

D = require("DBManager.js")
var myDB = android.database.sqlite.SQLiteDatabase.openDatabase("/sdcard/katalkbot/Bots/main/DB", null, android.database.sqlite.SQLiteDatabase.CREATE_IF_NECESSARY);

// ================= 방 관련 변수들 ====================
const console_room_name = "시립봇4 컨트롤방" // 콘솔방 이름
var roomList = ["시립봇4 컨트롤방","노은총"]
var roomListNum = roomList.length



UOS_library.getLibSeat = function getLibSeat(){
    let body = org.jsoup.Jsoup.connect("http://wisem.uos.ac.kr/mobile/MA/xml_seat_status_list.php").data("lib_gb", "C").post().select("item").toArray();
    let array = [];
    for (var i = 0; i < body.length; i++) {
        let room_name = body[i].select("room_name").text().replace("(중) ", "");
        let current_seat = body[i].select("use_seat").text() // 여유좌석이 아닌 점유좌석임
        let total_seat = body[i].select("total_seat").text()
        let my_seat = String(Number(total_seat) - Number(current_seat))
        array[i] = [[room_name[i]],[my_seat[i],total_seat[i]]]
    }
    return array;
}


UOS_library.displayLibSeat = function diaplayLibSeat(room){

    let pre_data = UOS_library.getLibSeat()

    let header_title = "중앙도서관 여유좌석"
    let header_mobile_link = ""
    let header_web_link = ""
    let header_image = "http://15.164.226.64:7080/image/UOS_logo.png"
    let header_x = "800"
    let header_y = "136"
    let header = [header_title, header_mobile_link, header_web_link, header_image, header_x, header_y]

    let title = pre_data.map(v=>v[0])
    let sub_title = pre_data.map(v=>"("+v[1]+"/"+v[2]+"석)")
    let link = []
    let mobile_link = []
    let THU = []
    let NEC = ["","",1]


    UOS_library.sendKaling_universal_5list(room,header,title,sub_title,link,mobile_link,THU,NEC)
}

/*
getEcoLibSeat=function() {
    abc = org.jsoup.Jsoup.connect("http://wisem.uos.ac.kr/mobile/MA/xml_seat_status_list.php").data("lib_gb", "A").post().select("item").toArray();
    res = "";
    for (var i = 0; i < abc.length; i++) {
        res += abc[i].select("room_name").text().replace("(경) ", "") + " (" + abc[i].select("use_seat").text() + "/" + abc[i].select("total_seat").text() + ")\n";
    }
    res += "(점유좌석/총좌석)"
    return res;
}
getLawLibSeat=function() {
    abc = org.jsoup.Jsoup.connect("http://wisem.uos.ac.kr/mobile/MA/xml_seat_status_list.php").data("lib_gb", "L").post().select("item").toArray();
    res = "";
    for (var i = 0; i < abc.length; i++) {
        res += abc[i].select("room_name").text().replace("(법) ", "") + " (" + abc[i].select("use_seat").text() + "/" + abc[i].select("total_seat").text() + ")\n";
    }
    res += "(점유좌석/총좌석)"
    return res;
}
 */









// JSON HTML '깨짐 방지코드
String.prototype.replaceAmp = function(){
    var res=this.toString();
    var tmp;
    while(tmp=/&#x....;/.exec(res)){
        res=res.replace(tmp[0],String.fromCharCode(parseInt(tmp[0].substr(3,4),16)));
    }
    while(tmp=/&#..;/.exec(res)){
        res=res.replace(tmp[0],String.fromCharCode(parseInt(tmp[0].substr(2,2))));
    }
    return res.replace(/&nbsp;/g,"\t").replace(/&gt;/g,">").replace(/&lt;/g,"<").replace(/&quot;/g,'"').replace(/&amp;/g,"&").replace(/&#034;/g,"\"");
}


//====================================== 카링 ======================================



const kalingModule=require("kaling.js").Kakao();

UOS_library.kakaoReset = function kakaoReset(){
    Kakao = new kalingModule();
    //Kakao.init("29fbf6ec828f27d72544c39a3bb4f8d0"); // P.kakaoint자리(이전)
    Kakao.init("904c559bc0ec53c94df6dad990b24c52"); //
    //Kakao.init("e02397085dc52168fe675d7013e1cfbf"); // P.kakaoint자리

    Kakao.login(UOS_library.getDB("kakaoId"), UOS_library.getDB("kakaoPw"));
}


UOS_library.sendKaling_universal_5list = function sendKaling_universal_5list(room,header,title,sub_title,link,mobile_link,THU,NEC){

    let kalingObj = {
        "link_ver":"4.0",
        "template_id" : (33176),
        "template_args" : {
            header_title : String(header[0]),
            header_mobile_link : String(header[1]),
            header_web_link : String(header[2]),
            header_title_THU : String(header[3]),
            header_title_imaga_x : String(header[4]),
            header_title_imaga_y : String(header[5]),
            title1 : String(title[0]),
            title2 : String(title[1]),
            title3 : String(title[2]),
            title4 : String(title[3]),
            title5 : String(title[4]),
            sub_title1 : String(sub_title[0]),
            sub_title2 : String(sub_title[1]),
            sub_title3 : String(sub_title[2]),
            sub_title4 : String(sub_title[3]),
            sub_title5 : String(sub_title[4]),
            link1 : String(link[0]),
            link2 : String(link[1]),
            link3 : String(link[2]),
            link4 : String(link[3]),
            link5 : String(link[4]),
            mobile_link1 : String(mobile_link[0]),
            mobile_link2 : String(mobile_link[1]),
            mobile_link3 : String(mobile_link[2]),
            mobile_link4 : String(mobile_link[3]),
            mobile_link5 : String(mobile_link[4]),
            THU1 : String(THU[0]),
            THU2 : String(THU[1]),
            THU3 : String(THU[2]),
            THU4 : String(THU[3]),
            THU5 : String(THU[4]),
            link : String(NEC[0]),
            mobile_link : String(NEC[1]),
            listRank : NEC[2] // true false
        }
    }
    try{
        Kakao.send(room, kalingObj, "custom");
    }catch(e){
        UOSP.kakaoReset();
        Kakao.send(room, kalingObj, "custom");
    }

}




//========================================= 카링 끝 =========================================

// 테이블 생성 : myDB.execSQL("create table UOSPTable (k text PRIMARY KEY, v text);");

UOS_library.setDB = function setDB(key,value){
    if(D.selectForArray("UOSPTable", null, "k like ?", key).length == 0){ // 해당하는 key에 value가 없는 경우
        D.insert("UOSPTable",{k:key, v:value})
    }
    else{ // 해당하는 key에 value가 있는 경우
        D.update("UOSPTable", {v:value}, "k=?", [key])
    }
}


UOS_library.getDB = function getDB(key){
    var arr = D.selectForArray("UOSPTable", null, "k=?", [key]);
    if (arr.length > 0) {
        return arr[0][1];
    } else {
        return undefined;
    }
}


UOS_library.getNum = function getNum(key) {
    var value = UOSP.getDB(key);
    return isNaN(value) ? 0 : Number(UOSP.getDB(key));
}


module.exports = UOS_library