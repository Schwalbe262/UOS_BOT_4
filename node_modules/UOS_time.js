UOS_time = new Object()

var cacheModule={} // require 관련 변수

function require(src,force){
    if(!force && cacheModule[src]!=undefined){
        return cacheModule[src];
    }
    else{
        var module = {exports:{}}
        var exports=module.exports
        eval(readFile("node_modules/"+src))
        cacheModule[src] = module.exports;
        return module.exports
    }
}

D = require("DBManager.js")
var myDB = android.database.sqlite.SQLiteDatabase.openDatabase("/sdcard/katalkbot/Bots/main/DB", null, android.database.sqlite.SQLiteDatabase.CREATE_IF_NECESSARY);

// ================= 방 관련 변수들 ====================
const console_room_name = "시립봇4 컨트롤방" // 콘솔방 이름

UOS_time.UOS_Time_DB_update = function UOS_Time_DB_update(year_,term_){ // 시간표업데이트용 #action "I", "U"

    Api.replyRoom(console_room_name,"DB업데이트 시작")
    var apikey = "201808506NVF93269"
    //var apikey2 = "201902537LTU88652" // 1학년 api key
    var apikey2 = "201808504QPI68682" // 대학원생 api key
    var year = year_
    var term = term_ // A10, A20
    var page = "http://wise.uos.ac.kr/uosdoc/api.ApiUcrMjTimeInq.oapi?apiKey="+apikey+"&year="+year+"&term="+term+"&deptDiv=*&dept=*&subDept=*" //전공
    var page2 = "http://wise.uos.ac.kr/uosdoc/api.ApiUcrCultTimeInq.oapi?apiKey="+apikey2+"&year="+year+"&term="+term+"&subjectDiv=*" //교양
    var parse = org.jsoup.Jsoup.connect(page).maxBodySize(0).get()
    var num = parse.select("subject_nm").toArray().length

    //myDB.execSQL("create table UOS_Time (DB_num text PRIMARY KEY, year text, term text, subject_div text, subject_div2 text, class_div text, subject_no text, subject_nm text, sub_dept text, day_night_nm text, shyr text, credit text, class_nm text, prof_nm text, class_type text, tlsn_limit_count text, tlsn_count text, etc_permit_yn text, sec_permit_yn text);");

    //D.create("UOS_Time",{DB_num:"1",year:"1",term:"1",subject_div:"1",subject_div2:"1",class_div:"1",subject_no:"1",subject_nm:"1",sub_dept:"1",day_night_nm:"1",shyr:"1",credit:"1",class_nm:"1",prof_nm:"1",class_type:"1",tlsn_limit_count:"1",tlsn_count:"1",etc_permit_yn:"1",sec_permit_yn:"1"})

    //D.delete(string table, string whereClause, string[] whereArgs)
    //D.delete("UOS_Time","year=? and term=?",[year,term])

    var subject_div = []
    var subject_div2 = []
    var subject_no = [] // 과목번호
    var class_div = [] // 분반
    var subject_nm = [] // 과목명
    var sub_dept = [] // 학부
    var day_night_nm = [] // 주간 야간
    var shyr = [] // 학년 (0이면 대학원)
    var credit = [] // 학점
    var class_nm = [] // 시간 및 강의실
    var prof_nm = []
    var class_type = [] // 외국어강의
    var tlsn_limit_count = [] // 수강정원
    var tlsn_count = [] // 수강인원
    var etc_permit_yn = [] // 타과 허용
    var sec_permit_yn = [] // 복수전공

    var subject_div_temp = parse.select("subject_div").toArray()
    var subject_div2_temp = parse.select("subject_div2").toArray()
    var subject_no_temp = parse.select("subject_no").toArray()
    var class_div_temp = parse.select("class_div").toArray()
    var subject_nm_temp = parse.select("subject_nm").toArray()
    var sub_dept_temp = parse.select("sub_dept").toArray()
    var day_night_nm_temp = parse.select("day_night_nm").toArray()
    var shyr_temp = parse.select("shyr").toArray()
    var credit_temp = parse.select("credit").toArray()
    var class_nm_temp = parse.select("class_nm").toArray()
    var prof_nm_temp = parse.select("prof_nm").toArray()
    var class_type_temp = parse.select("class_type").toArray()
    var tlsn_limit_count_temp = parse.select("tlsn_limit_count").toArray()
    var tlsn_count_temp = parse.select("tlsn_count").toArray()
    var etc_permit_yn_temp = parse.select("etc_permit_yn").toArray()
    var sec_permit_yn_temp = parse.select("sec_permit_yn").toArray()

    var DB_num = []

    for(var i=0 ; i<num ; i++){
        subject_div[i] = subject_div_temp[i].text()
        subject_div2[i] = subject_div2_temp[i].text()
        class_div[i] = class_div_temp[i].text()
        subject_no[i] = subject_no_temp[i].text()
        subject_nm[i] =  subject_nm_temp[i].text()
        sub_dept[i] = sub_dept_temp[i].text()
        day_night_nm[i] = day_night_nm_temp[i].text()
        shyr[i] = shyr_temp[i].text()
        credit[i] = credit_temp[i].text()
        class_nm[i] = class_nm_temp[i].text()
        prof_nm[i] = prof_nm_temp[i].text()
        class_type[i] = class_type_temp[i].text()
        tlsn_limit_count[i] = tlsn_limit_count_temp[i].text()
        tlsn_count[i] = tlsn_count_temp[i].text()
        etc_permit_yn[i] = etc_permit_yn_temp[i].text()
        sec_permit_yn[i] = sec_permit_yn_temp[i].text()

        DB_num[i] = year + "_" + term + "_" + subject_no[i] + "_" + class_div[i]

        if( D.selectForArray("UOS_Time", null, "DB_num like ?", DB_num[i]).length == 0 ){ // 기존 DB가 존재하지 않는 경우
            D.insert("UOS_Time",{
                DB_num:DB_num[i],
                year:year,
                term:term,
                subject_div:subject_div[i],
                subject_div2:subject_div2[i],
                class_div:class_div[i],
                subject_no:subject_no[i],
                subject_nm:subject_nm[i],
                sub_dept:sub_dept[i],
                day_night_nm:day_night_nm[i],
                shyr:shyr[i],
                credit:credit[i],
                class_nm:class_nm[i],
                prof_nm:prof_nm[i],
                class_type:class_type[i],
                tlsn_limit_count:tlsn_limit_count[i],
                tlsn_count:tlsn_count[i],
                etc_permit_yn:etc_permit_yn[i],
                sec_permit_yn:sec_permit_yn[i]
            })
        }
        else{
            D.update("UOS_Time", {
                //DB_num:DB_num[i],
                year:year,
                term:term,
                subject_div:subject_div[i],
                subject_div2:subject_div2[i],
                class_div:class_div[i],
                subject_no:subject_no[i],
                subject_nm:subject_nm[i],
                sub_dept:sub_dept[i],
                day_night_nm:day_night_nm[i],
                shyr:shyr[i],
                credit:credit[i],
                class_nm:class_nm[i],
                prof_nm:prof_nm[i],
                class_type:class_type[i],
                tlsn_limit_count:tlsn_limit_count[i],
                tlsn_count:tlsn_count[i],
                etc_permit_yn:etc_permit_yn[i],
                sec_permit_yn:sec_permit_yn[i]
            }, "DB_num=?", DB_num[i])
        }

        /*
        if(i%100==0){
            Api.replyRoom(console_room_name,i)
        }
         */

    }
    //Api.replyRoom(console_room_name,"전공 파싱 "+i+"번까지 완료")

    var parse = org.jsoup.Jsoup.connect(page2).maxBodySize(0).get()
    var num = parse.select("subject_nm").toArray().length

    var subject_div = []
    var subject_div2 = []
    var subject_no = [] // 과목번호
    var class_div = [] // 분반
    var subject_nm = [] // 과목명
    var sub_dept = [] // 학부
    var day_night_nm = [] // 주간 야간
    var shyr = [] // 학년 (0이면 대학원)
    var credit = [] // 학점
    var class_nm = [] // 시간 및 강의실
    var prof_nm = []
    var class_type = [] // 외국어강의
    var tlsn_limit_count = [] // 수강정원
    var tlsn_count = [] // 수강인원
    var etc_permit_yn = [] // 타과 허용
    var sec_permit_yn = [] // 복수전공

    var subject_div_temp = parse.select("subject_div").toArray()
    var subject_div2_temp = parse.select("subject_div2").toArray()
    var subject_no_temp = parse.select("subject_no").toArray()
    var class_div_temp = parse.select("class_div").toArray()
    var subject_nm_temp = parse.select("subject_nm").toArray()
    var sub_dept_temp = parse.select("sub_dept").toArray()
    var day_night_nm_temp = parse.select("day_night_nm").toArray()
    var shyr_temp = parse.select("shyr").toArray()
    var credit_temp = parse.select("credit").toArray()
    var class_nm_temp = parse.select("class_nm").toArray()
    var prof_nm_temp = parse.select("prof_nm").toArray()
    var class_type_temp = parse.select("class_type").toArray()
    var tlsn_limit_count_temp = parse.select("tlsn_limit_count").toArray()
    var tlsn_count_temp = parse.select("tlsn_count").toArray()
    var etc_permit_yn_temp = parse.select("etc_permit_yn").toArray()
    var sec_permit_yn_temp = parse.select("sec_permit_yn").toArray()

    var DB_num = []

    for(var i=0 ; i<num ; i++){
        subject_div[i] = subject_div_temp[i].text()
        subject_div2[i] = subject_div2_temp[i].text()
        class_div[i] = class_div_temp[i].text()
        subject_no[i] = subject_no_temp[i].text()
        subject_nm[i] =  subject_nm_temp[i].text()
        sub_dept[i] = sub_dept_temp[i].text()
        day_night_nm[i] = day_night_nm_temp[i].text()
        shyr[i] = shyr_temp[i].text()
        credit[i] = credit_temp[i].text()
        class_nm[i] = class_nm_temp[i].text()
        prof_nm[i] = prof_nm_temp[i].text()
        class_type[i] = class_type_temp[i].text()
        tlsn_limit_count[i] = tlsn_limit_count_temp[i].text()
        tlsn_count[i] = tlsn_count_temp[i].text()
        etc_permit_yn[i] = etc_permit_yn_temp[i].text()
        sec_permit_yn[i] = sec_permit_yn_temp[i].text()


        DB_num[i] = year + "_" + term + "_" + subject_no[i] + "_" + class_div[i]

        if( D.selectForArray("UOS_Time", null, "DB_num like ?", DB_num[i]).length != 0 ){ // 기존 DB가 존재하는 경우
            D.insert("UOS_Time",{
                DB_num:DB_num[i],
                year:year,
                term:term,
                subject_div:subject_div[i],
                subject_div2:subject_div2[i],
                class_div:class_div[i],
                subject_no:subject_no[i],
                subject_nm:subject_nm[i],
                sub_dept:sub_dept[i],
                day_night_nm:day_night_nm[i],
                shyr:shyr[i],
                credit:credit[i],
                class_nm:class_nm[i],
                prof_nm:prof_nm[i],
                class_type:class_type[i],
                tlsn_limit_count:tlsn_limit_count[i],
                tlsn_count:tlsn_count[i],
                etc_permit_yn:etc_permit_yn[i],
                sec_permit_yn:sec_permit_yn[i]
            })
        }
        else{
            D.update("UOS_Time", {
                //DB_num:DB_num[i],
                year:year,
                term:term,
                subject_div:subject_div[i],
                subject_div2:subject_div2[i],
                class_div:class_div[i],
                subject_no:subject_no[i],
                subject_nm:subject_nm[i],
                sub_dept:sub_dept[i],
                day_night_nm:day_night_nm[i],
                shyr:shyr[i],
                credit:credit[i],
                class_nm:class_nm[i],
                prof_nm:prof_nm[i],
                class_type:class_type[i],
                tlsn_limit_count:tlsn_limit_count[i],
                tlsn_count:tlsn_count[i],
                etc_permit_yn:etc_permit_yn[i],
                sec_permit_yn:sec_permit_yn[i]
            }, "DB_num=?", DB_num[i])
        }

    }
    //Api.replyRoom(console_room_name,"교양 파싱 "+i+"번까지 완료")
    Api.replyRoom(console_room_name,"DB업데이트 종료")

}

//=====================================================================================================================================
//=====================================================================================================================================
//=====================================================================================================================================

UOS_time.UOS_Time_DB_search = function UOS_Time_DB_search(key,year_,term_){
    var str = "%"+key.split("").join("%")+"%"
    var res = ""
    var mc = ""

    var i=0
    var j=0
    var temp = 0


    var DB_num = [] //0
    var	year = []
    var	subject_div = []
    var	subject_div2 = []
    var	class_div = []
    var	subject_no =[]
    var	subject_nm = []
    var	sub_dept = []
    var day_night_nm = []
    var	shyr = []
    var	class_nm = []
    var	prof_nm = []
    var	class_type = []
    var	tlsn_limit_count = []
    var	tlsn_count = []
    var	etc_permit_yn = []
    var	sec_permit_yn = [] // 16

    if(term_==""){
        mc=D.rawQuery("select * from UOS_Time where subject_nm like '"+str+"' and year = '"+year_+"'",null) // 교과목명에서 검색
        while(mc.moveToNext()){
            for(var i=0;i<16;i++){
                res+=mc.getString(i)+"||"
            }
            res+=mc.getString(16)+"\n"
        }
        mc.close()
    }
    else{
        mc=D.rawQuery("select * from UOS_Time where subject_nm like '"+str+"' and year = '"+year_+"' and term = '"+term_+"'",null) // 교과목명에서 검색
        while(mc.moveToNext()){
            for(var i=0;i<16;i++){
                res+=mc.getString(i)+"||"
            }
            res+=mc.getString(16)+"\n"
        }
        mc.close()
    }


    if(term_=="") {
        mc=D.rawQuery("select * from UOS_Time where prof_nm like '"+str+"' and year = '"+year_+"'",null) // 담당교수명에서 검색
        while(mc.moveToNext()){
            for(var i=0;i<16;i++){
                res+=mc.getString(i)+"||"
            }
            res+=mc.getString(16)+"\n"
        }
        mc.close()
    }
    else{
        mc=D.rawQuery("select * from UOS_Time where prof_nm like '"+str+"' and year = '"+year_+"' and term = '"+term_+"'",null) // 담당교수명에서 검색
        while(mc.moveToNext()){
            for(var i=0;i<16;i++){
                res+=mc.getString(i)+"||"
            }
            res+=mc.getString(16)+"\n"
        }
        mc.close()
    }


    if(term_=="") {
        mc=D.rawQuery("select * from UOS_Time where sub_dept like '"+str+"' and year = '"+year_+"'",null) // 학과명에서 검색
        while(mc.moveToNext()){
            for(var i=0;i<16;i++){
                res+=mc.getString(i)+"||"
            }
            res+=mc.getString(16)+"\n"
        }
        mc.close()
    }
    else{
        mc=D.rawQuery("select * from UOS_Time where sub_dept like '"+str+"' and year = '"+year_+"' and term = '"+term_+"'",null) // 학과명에서 검색
        while(mc.moveToNext()){
            for(var i=0;i<16;i++){
                res+=mc.getString(i)+"||"
            }
            res+=mc.getString(16)+"\n"
        }
        mc.close()
    }


    return res
}



UOS_time.UOS_Time_DB_search_toString = function UOS_Time_DB_search_toString(msg,room){

    var year = ""
    var term = ""
    var key = ""

    if(msg.split(" ")[1].search(/\d\d\d\d/)==0 && msg.split(" ")[2] == "1학기"){
        year = String(msg.split(" ")[1])
        term = "A10"
        key = String(msg.split(" ").slice(3,msg.split(" ").length))
    }
    else if(msg.split(" ")[1].search(/\d\d\d\d/)==0 && msg.split(" ")[2] == "2학기"){
        year = String(msg.split(" ")[1])
        term = "A20"
        key = String(msg.split(" ").slice(3,msg.split(" ").length))
    }
    else if(msg.split(" ")[1].search(/\d\d\d\d/)==0){ // 다른년도 검색 활성화
        year = String(msg.split(" ")[1])
        key = String(msg.split(" ").slice(2,msg.split(" ").length))
    }
    else{ // 디폴트 설정 (매학기 변경 필요)
        year = "2020"
        term = "A20"
        key = String(msg.split(" ").slice(1,msg.split(" ").length))
    }

    var data = UOS_time.UOS_Time_DB_search(key,year,term)
    var num = Number( data.split("\n").length ) // 데이터 없어도 기본 1임에 주의

    var search_str = ""
    var search_nm = "" // 검색결과가 몇번 DB인지를 임시 저장
    var search_split = ""

    if(num == 1){
        search_str = "검색결과가 없습니다."
    }
    else{
        for(var i=0;i<num-1;i++){
            search_split = data.split("\n")[i].split("||")
            search_nm = search_nm + search_split[0] + "||"
            search_str += (i+1) + "." + search_split[7] + "(" + search_split[13] + "교수님)\n" + search_split[12]
                + " (" + search_split[16] + "/" + search_split[15] + ")\n\n"
        }
        UOS_time.setDB("search_detail_"+room,search_nm)
    }

    return search_str

}


UOS_time.UOS_Time_DB_search_toString_detail = function UOS_Time_DB_search_toString_detail(Num,room){

    var str = []

    if(Num%1==0){
        try{
            var search_nm = getDB("UOS_Time_"+room).split("||")[Num-1]
            var selected_DB = D.selectForArray("UOS_Time",null,"DB_num is ?",search_nm)
            str[0] += "강의년도 : "+selected_DB[0][1]+"년\n"
            if(selected_DB[0][2]=="A10"){
                str[0] += "강의학기 : 1학기\n"
            }
            else if(selected_DB[0][2]=="A20") {
                str[0] += "강의학기 : 2학기\n"
            }
            str[0] += "교과목명 : "+selected_DB[0][7]+"\n"
            str[0] += "담당교수님 : "+selected_DB[0][13]+"교수님\n"
            str[0] += "강의실 및 시간 : "+selected_DB[0][12]+"\n"
            str[0] += "교과번호 및 분반 : "+selected_DB[0][6]+"("+selected_DB[0][5]+"분반)\n"
            str[0] += "학과 : "+selected_DB[0][8]+"\n"
            str[0] += "교과구분 : "+selected_DB[0][3]+"("+selected_DB[0][4]+")\n"
            if(selected_DB[0][10]=="0"){
                str[0] += "학년 : 대학원\n"
            }
            else {
                str[0] += "학년 : " + selected_DB[0][10] + "\n"
            }
            str[0] += "학점 : "+selected_DB[0][11]+"\n"
            str[0] += "수강정원 : "+selected_DB[0][15]+"\n"
            str[0] += "수강인원 : "+selected_DB[0][16]+"\n"
            if(selected_DB[0][14]==""){
                str[0] += "외국어강의여부 : N\n"
            }
            else{
                str[0] += "외국어강의여부 : Y\n"
            }
            str[0] += "타과허용 : "+selected_DB[0][17]+"\n"
            str[0] += "복전허용 : "+selected_DB[0][18]

            var apikey_1413 = "202002612JKC69748";
            //var apikey = "201808506NVF93269";
            var coursePlan = String(org.jsoup.Jsoup.connect("http://wise.uos.ac.kr/uosdoc/api.ApiApiCoursePlanView.oapi?apiKey="+apikey_1413+"&year=2019&term=A10&subjectNo="+selected_DB[0][6]+"&classDiv="+selected_DB[0][5]).get().select("class_cont"))
            var coursePlanLength = coursePlan.split("<class_cont><![CDATA[").length

            for(var i=0 ; i<coursePlanLength-1 ; i++){
                str[1] += (i+1)+"주차:"+coursePlan.split("<class_cont><![CDATA[")[i+1].split("]")[0].replace(/\r/g,"").replace(/\n/g,"")+"\n"
            }
            str[2] = String(org.jsoup.Jsoup.connect("http://wise.uos.ac.kr/uosdoc/api.ApiApiCoursePlanView.oapi?apiKey=201808506NVF93269&year="+selected_DB[0][1]+"&term="+selected_DB[0][2]+"&subjectNo="+selected_DB[0][6]+"&classDiv="+selected_DB[0][5]).get().select("score_eval_rate")).split("<score_eval_rate><![CDATA[")[1].split("]]>")[0].replace(/\t/g,"").split("□ ").join("\n□")
            str[3] = String(org.jsoup.Jsoup.connect("http://wise.uos.ac.kr/uosdoc/api.ApiApiCoursePlanView.oapi?apiKey=201808506NVF93269&year="+selected_DB[0][1]+"&term="+selected_DB[0][2]+"&subjectNo="+selected_DB[0][6]+"&classDiv="+selected_DB[0][5]).get().select("lec_goal_descr")).split("<![CDATA[")[1].split("]]>")[0].replace(/\t/g,"")
            str[4] = String(org.jsoup.Jsoup.connect("http://wise.uos.ac.kr/uosdoc/api.ApiApiCoursePlanView.oapi?apiKey=201808506NVF93269&year="+selected_DB[0][1]+"&term="+selected_DB[0][2]+"&subjectNo="+selected_DB[0][6]+"&classDiv="+selected_DB[0][5]).get().select("curi_edu_goal_nm")).split("<![CDATA[")[1].split("]]>")[0].replace(/\t/g,"")

            return str

        /* form 예시
        교과목명 : 전자전기컴퓨터종합설계
        담당교수님 : 이승환교수님
        강의실 및 시간 : 수05,06,07,08,09/19-213/214
        교과번호 및 분반 : 40138(02분반)
        학과 : 전자전기컴퓨터공학부
        교과구분 : 전공선택(전공선택)
        학년 : 4
        학점 : 3
        외국어강의여부 : N
        */
        }
        catch(e){
            str = "올바른 번호를 입력해주세요."
            return str
        }

    }
    else{
        str = "올바른 번호를 입력해주세요."
        return str
    }

}




//========================================= 카링 끝 =========================================

// 테이블 생성 : myDB2 = android.database.sqlite.SQLiteDatabase.openDatabase("/sdcard/katalkbot/Bots/main/DB_folder/DB_UOS_time", null, android.database.sqlite.SQLiteDatabase.CREATE_IF_NECESSARY);
// 테이블 생성 : myDB2.execSQL("create table UOS_Time (k text PRIMARY KEY, v text);");

UOS_time.setDB = function setDB(key,value){
    if(D.selectForArray("UOSPTable", null, "k like ?", key).length == 0){ // 해당하는 key에 value가 없는 경우
        D.insert("UOS_Time",{k:key, v:value})
    }
    else{ // 해당하는 key에 value가 있는 경우
        D.update("UOS_Time", {v:value}, "k=?", [key])
    }
}


UOS_time.getDB = function getDB(key){
    var arr = D.selectForArray("UOS_Time", null, "k=?", [key]);
    if (arr.length > 0) {
        return arr[0][1];
    } else {
        return undefined;
    }
}


UOS_time.getNum = function getNum(key) {
    var value = UOSP.getDB(key);
    return isNaN(value) ? 0 : Number(UOSP.getDB(key));
}



module.exports = UOS_time