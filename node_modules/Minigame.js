module.exports = new Object()
H = require("Hangul.js")


function Taja(room){
	var list = readFile("s.txt").split("\n");
	this.test = list[Math.floor(Math.random()*list.length)]
	var tasu = H.d(this.test).length
	var time = 0.5*tasu
	var minus = ((room == "시갤톡방") ? 1.4 : 1.1)
	
	function chg(str) {
		return String.fromCharCode(8237)+str.replace(" "," ").replace(" "," ")+String.fromCharCode(8237)
	}
	
	function start() {
			Api.replyRoom(room,"타자대결을 시작합니다.\n3")
			java.lang.Thread.sleep(1000)
			Api.replyRoom(room,"2")
			java.lang.Thread.sleep(1000)
			Api.replyRoom(room,"1")
			java.lang.Thread.sleep(1000)
			Api.replyRoom(room,chg(this.test)+"\n(제한시간 "+time+"초)")
			var past = new Date()
			var winner = monitor(room,"",(v)=>{return Boolean(v.m==this.test)},(v)=>{return v.s},time)
			if(winner == -1) {
				Api.replyRoom(room,"시간초과!")
				tajaRoom.splice(tajaRoom.indexOf(room),1)
				return
			}
			var fin = ((new Date() - past)/1000)-minus
			var vel = java.lang.String.format("%.2f",60*tasu/fin)
			Api.replyRoom(room,winner + "의 승리!\n총글자수:"+tasu+"\n걸린시간:"+fin.toFixed(3)+"\n타자속도:분당 "+vel+"타")
			tajaRoom.splice(tajaRoom.indexOf(room),1)
			return
	}
	this.start = start
	}

	
module.exports.Taja = Taja


function Omok(room,chall,def){ //room,challenger,defender
this.is_finished = false
var fighters = [chall,def]
var omokpan = "\
◎ⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜ\n\
①┏┯┯┯┯┯┯┯┯┯┯┯┓\n\
②┠┼┼┼┼┼┼┼┼┼┼┼┨\n\
③┠┼┼┼┼┼┼┼┼┼┼┼┨\n\
④┠┼┼┼┼┼┼┼┼┼┼┼┨\n\
⑤┠┼┼┼┼┼┼┼┼┼┼┼┨\n\
⑥┠┼┼┼┼┼┼┼┼┼┼┼┨\n\
⑦┠┼┼┼┼┼┼┼┼┼┼┼┨\n\
⑧┠┼┼┼┼┼┼┼┼┼┼┼┨\n\
⑨┠┼┼┼┼┼┼┼┼┼┼┼┨\n\
⑩┠┼┼┼┼┼┼┼┼┼┼┼┨\n\
⑪┠┼┼┼┼┼┼┼┼┼┼┼┨\n\
⑫┠┼┼┼┼┼┼┼┼┼┼┼┨\n\
⑬┗┷┷┷┷┷┷┷┷┷┷┷┛\
"

function make2d_array(x,y)
{
var init = 0
var tt = new Array(y)
for(var i = 0;i<y;i++){
    tt[i] = new Array(x)
    for(var j = 0;j<x;j++){
        tt[i][j] = init
    }
  }
return tt
}


	var stone = make2d_array(13,13)

	function checkStoneMsg(msg) {
		if(/[A-M]/.test(msg[0]) && 1 <=Number(msg.trim().substr(1)) && Number(msg.trim().substr(1)) <= 13){ //TODO :간략화
			return true
		}
		else { return false }
	}
	
	function setStone(xpos,ypos,color){
		//0:no stone 1:black 2:white
		xpos = xpos.charCodeAt(0)-65
		ypos -=1
		stone[ypos][xpos] = color
	}
	
	function replaceAt(str,index, replacement) { 
		return str.substr(0, index) + replacement+ str.substr(index + replacement.length); 
	}
	
	function putStone () {
    		var pan = omokpan;
    		for (var y = 0; y < 13; y++) {
        		for (var x = 0; x < 13; x++) {
            		if (stone[y][x] != 0) {
                		if (stone[y][x] == 1) {
                    		pan = replaceAt(pan,(y*15 + x + 16), "●");
                		}
                	if (stone[y][x] == 2) {
                    		pan = replaceAt(pan,(y*15 + x + 16), "○");
                	}
            	}
        	}
    	}
    	return pan;
	}

	function start() {
		Api.replyRoom(room,chall+"님이 "+def+"님에게 대국을 신청하였습니다. 받아들이시겠습니까?\n(네/아니오) (15초안에 입력해주세요)")
		var fight = monitor(room,def,(v)=>{return Boolean(v.m.trim() == ("네" || "아니오"))},(v) =>{return Boolean(v.m.trim() == "네")},15)
		if(!fight || fight == -1){
			Api.replyRoom(room,"대국이 성사되지 않았습니다")
			omokRoom.splice(omokRoom.indexOf(room),1)
			return
		}
		else{
		var idx = 1 
		for(var i = 1;!this.is_finished;i++) {
			idx = 1- idx
			var fighter = fighters[idx]
			Api.replyRoom(room,"제"+i+"수")
			Api.replyRoom(room,putStone())
			Api.replyRoom(room,fighter+"의 차례\nA1(알파벳+숫자)의 형식으로 입력해주세요. (제한시간 3분)")
			var dol = monitor(room,fighter,(v)=>{return checkStoneMsg(v.m)},(v) =>{return [v.m[0],v.m.trim().substr(1),idx+1]},45)
			if(dol == -1) {
				Api.replyRoom(room,"시간초과! "+fighters[1-idx]+"의 승리")
				omokRoom.splice(omokRoom.indexOf(room),1)
				return;
			}
			setStone(dol[0],dol[1],dol[2])
		}
		}
	}
	this.start = start
}
module.exports.Omok = Omok
