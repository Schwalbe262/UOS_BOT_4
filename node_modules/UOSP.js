UOSP = new Object()

var cacheModule={} // require 관련 변수

function require(src,force){
    if(!force && cacheModule[src]!=undefined){
        return cacheModule[src];
    }
    else{
        var module = {exports:{}}
        var exports=module.exports
        eval(readFile("node_modules/"+src))
        cacheModule[src] = module.exports;
        return module.exports
    }
}

D = require("DBManager.js")
var myDB = android.database.sqlite.SQLiteDatabase.openDatabase("/sdcard/katalkbot/Bots/main/DB", null, android.database.sqlite.SQLiteDatabase.CREATE_IF_NECESSARY);

// ================= 방 관련 변수들 ====================
const console_room_name = "봇장난" // 콘솔방 이름
var roomList = ["봇장난","시갤톡방","시립공지확인방1"]
var roomListNum = roomList.length


// 일반 공지
UOSP.UOSP1 = function UOSP1(){ // 일반공지 파싱
    let str = ""
    let SW_new = 0; // 새로운 공지가 파싱되었을 경우 1이됨

    let parse = org.jsoup.Jsoup.connect("http://www.uos.ac.kr/korNotice/list.do?list_id=FA1").get()
        .select("ul.listType>li:not(.on)>a").get(0) // 파싱 데이터 (상위공지)
    let title = parse.ownText() // 글 제목
    let adress = parse.attr("onclick").split("'")[3] // 글 주소

    if (title == "" || title == "MIWIFI" || title == undefined) { // 오류일시 종료
        return 0;
    }
    // DB구조 : [[공지제목,공지주소,날짜],[공지제목,공지주소,날짜]]
    let temp = JSON.parse(UOSP.getDB("UOSP1_DB"))
    let pre_DB = temp[temp.length-1] // 이전 DB 마지막 부분
    if ( pre_DB[0] != String(title).replaceAmp()) { // 새로운 내용이 파싱되었을 경우
        UOSP.UOSP1_collect(Number(pre_DB[1])+1,adress) // DB 기록작업
        SW_new = 1
    }

    if (SW_new == 1) {
        str += "일반 공지가 새로 게시되었습니다\n"
        str += title

        for(let i=0;i<Number(roomListNum);i++){
            try{UOSP.sendKaling_notice(String(roomList[i]),"일반공지알림",String("redirect_UOS?tourl=http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq="+adress),"","",String(title))}
            catch(e){}
        }
    }
}

UOSP.UOSP1_collect = function UOSP1_collect(start_num,stop_num){

    // http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq=7254
// 일반공지의 첫 공지주소번호는 7254
// DB구조 예시: [[공지제목,공지주소,날짜],[공지제목,공지주소,날짜]]
// 마지막 DB : JSON.parse(UOSP.getDB("UOSP1_DB"))[JSON.parse(UOSP.getDB("UOSP1_DB")).length-1]
// 검색코드 예시 : JSON.parse(UOSP.getDB("UOSP1_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes("전자"))
// 검색코드 예시 : JSON.parse(UOSP.getDB("UOSP1_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes("전자전기컴퓨터")).sort(function(a,b){return Number(a[1])>Number(b[1]) ? -1 : Number(a[1]) < Number(b[1]) ? 1 : 0}).map(v=>v[0]+" ("+v[2]+")\n- "+"http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq="+v[1]+"\n\n").join("").trim()


    let count_sucess = 0
    let count_failed = 0

    // 초기 DB 세팅 코드 : UOSP.setDB("UOSP1_DB",JSON.stringify([])) // 주의 : 건드리지 말 것
    var pre_DB = JSON.parse(UOSP.getDB("UOSP1_DB"))
    for(let i=Number(start_num);i<Number(stop_num)+1;i++){
        try{
            let body = org.jsoup.Jsoup.connect("http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq="+i).get()
            let title = body.select(".listType>li>span").get(0).ownText() // 글 제목
            let date = body.select(".listType>li>ul>li").get(2).ownText() // 글 게시일

            let array = [[String(title).replaceAmp()],[String(i)],[String(date)]]
            pre_DB.push(array)


            if(i%50==0){
                Api.replyRoom(console_room_name,i+"번 주소까지 진행 완료")
                java.lang.Thread.sleep(10000) // 200ms
                UOSP.setDB("UOSP1_DB",JSON.stringify(pre_DB))
                pre_DB = JSON.parse(UOSP.getDB("UOSP1_DB"))
            }
            count_sucess++
        }
        catch(e){count_failed++} // 해당 주소에 아무런 내용이 존재하지 않을 경우 아무것도 하지 않음
    }
    let temp = JSON.stringify(pre_DB)
    UOSP.setDB("UOSP1_DB",temp)
    return("성공 : "+count_sucess+"\n실패 : "+count_failed)

}

UOSP.UOSP1_search = function UOSP1_search(key){
    return JSON.parse(UOSP.getDB("UOSP1_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes(key.replace(/ /g,""))).sort(function(a,b){return Number(a[1])>Number(b[1]) ? -1 : Number(a[1]) < Number(b[1]) ? 1 : 0})
        .map(v=>v[0]+" ("+v[2]+")\n- "+"http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq="+v[1]+"\n\n").join("").trim().substr(0,200000)
}

UOSP.UOSP1_list = function UOSP1_list(room){

    let temp = JSON.parse(UOSP.getDB("UOSP1_DB"))
    let length = temp.length
    temp = temp.splice(length-5,5)

    let header_title = "일반공지"
    let header_mobile_link = ""
    let header_web_link = ""
    let header_image = "http://15.164.226.64:7080/image/UOS_logo.png"
    let header_x = "800"
    let header_y = "136"
    let header = [header_title, header_mobile_link, header_web_link, header_image, header_x, header_y]

    let title = []
    let sub_title = []
    let link = []
    let mobile_link = []
    let THU = []

    for(let i=0 ; i<5 ; i++){
        title[i] = temp[4-i][0]
        sub_title[i] = temp[4-i][2]
        link[i] = "redirect_UOS?tourl=http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq=" + temp[4-i][1]
        mobile_link[i] = "redirect_UOS?tourl=http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq=" + temp[4-i][1]
        THU[i] = ""
    }

    let NEC = ["","",0]

    UOSP.sendKaling_universal_5list(room,header,title,sub_title,link,mobile_link,THU,NEC)
}


// 학사 공지
UOSP.UOSP2 = function UOSP2(){ // 학사공지 파싱
    let str = ""
    let SW_new = 0; // 새로운 공지가 파싱되었을 경우 1이됨

    let parse = org.jsoup.Jsoup.connect("http://www.uos.ac.kr/korNotice/list.do?list_id=FA2").get()
        .select("ul.listType>li:not(.on)>a").get(0) // 파싱 데이터 (상위공지)
    let title = parse.ownText() // 글 제목
    let adress = parse.attr("onclick").split("'")[3] // 글 주소

    if (title == "" || title == "MIWIFI" || title == undefined) { // 오류일시 종료
        return 0;
    }
    // DB구조 : [[공지제목,공지주소,날짜],[공지제목,공지주소,날짜]]
    let temp = JSON.parse(UOSP.getDB("UOSP2_DB"))
    let pre_DB = temp[temp.length-1] // 이전 DB 마지막 부분
    if ( pre_DB[0] != String(title).replaceAmp()) { // 새로운 내용이 파싱되었을 경우
        UOSP.UOSP2_collect(Number(pre_DB[1])+1,adress) // DB 기록작업
        SW_new = 1
    }

    if (SW_new == 1) {
        for(let i=0;i<Number(roomListNum);i++){
            try{UOSP.sendKaling_notice(String(roomList[i]),"학사공지알림",String("redirect_UOS?tourl=http://www.uos.ac.kr/korNotice/view.do?list_id=FA2&seq="+adress),"","",String(title))}
            catch(e){}
        }
    }
}

UOSP.UOSP2_collect = function UOSP2_collect(start_num,stop_num){

// http://www.uos.ac.kr/korNotice/view.do?list_id=FA2&seq=4244
// 학사공지의 첫 공지주소번호는 4244
// DB구조 예시: [[공지제목,공지주소,날짜],[공지제목,공지주소,날짜]]
// 마지막 DB : JSON.parse(UOSP.getDB("UOSP2_DB"))[JSON.parse(UOSP.getDB("UOSP2_DB")).length-1]
// 검색코드 예시 : JSON.parse(UOSP.getDB("UOSP2_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes("전자"))
// 검색코드 예시 : JSON.parse(UOSP.getDB("UOSP2_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes("전자전기컴퓨터")).sort(function(a,b){return Number(a[1])>Number(b[1]) ? -1 : Number(a[1]) < Number(b[1]) ? 1 : 0}).map(v=>v[0]+" ("+v[2]+")\n- "+"http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq="+v[1]+"\n\n").join("").trim()


    let count_sucess = 0
    let count_failed = 0

    // 초기 DB 세팅 코드 : UOSP.setDB("UOSP1_DB",JSON.stringify([])) // 주의 : 건드리지 말 것
    var pre_DB = JSON.parse(UOSP.getDB("UOSP2_DB"))
    for(let i=Number(start_num);i<Number(stop_num)+1;i++){
        try{
            let body = org.jsoup.Jsoup.connect("http://www.uos.ac.kr/korNotice/view.do?list_id=FA2&seq="+i).get()
            let title = body.select(".listType>li>span").get(0).ownText() // 글 제목
            let date = body.select(".listType>li>ul>li").get(2).ownText() // 글 게시일

            let array = [[String(title).replaceAmp()],[String(i)],[String(date)]]
            pre_DB.push(array)


            if(i%50==0){
                Api.replyRoom(console_room_name,i+"번 주소까지 진행 완료\n성공 : "+count_sucess+"\n실패 : "+count_failed)
                java.lang.Thread.sleep(10000) // 200ms
                UOSP.setDB("UOSP2_DB",JSON.stringify(pre_DB))
                pre_DB = JSON.parse(UOSP.getDB("UOSP2_DB"))
            }
            count_sucess++
        }
        catch(e){count_failed++} // 해당 주소에 아무런 내용이 존재하지 않을 경우 아무것도 하지 않음
    }
    let temp = JSON.stringify(pre_DB)
    UOSP.setDB("UOSP2_DB",temp)
    return("성공 : "+count_sucess+"\n실패 : "+count_failed)

}

UOSP.UOSP2_search = function UOSP2_search(key){
    return JSON.parse(UOSP.getDB("UOSP2_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes(key.replace(/ /g,""))).sort(function(a,b){return Number(a[1])>Number(b[1]) ? -1 : Number(a[1]) < Number(b[1]) ? 1 : 0})
        .map(v=>v[0]+" ("+v[2]+")\n- "+"http://www.uos.ac.kr/korNotice/view.do?list_id=FA2&seq="+v[1]+"\n\n").join("").trim().substr(0,200000)
}

UOSP.UOSP2_list = function UOSP2_list(room){

    let temp = JSON.parse(UOSP.getDB("UOSP2_DB"))
    let length = temp.length
    temp = temp.splice(length-5,5)

    let header_title = "학사공지"
    let header_mobile_link = ""
    let header_web_link = ""
    let header_image = "http://15.164.226.64:7080/image/UOS_logo.png"
    let header_x = "800"
    let header_y = "136"
    let header = [header_title, header_mobile_link, header_web_link, header_image, header_x, header_y]

    let title = []
    let sub_title = []
    let link = []
    let mobile_link = []
    let THU = []

    for(let i=0 ; i<5 ; i++){
        title[i] = temp[4-i][0]
        sub_title[i] = temp[4-i][2]
        link[i] = "redirect_UOS?tourl=http://www.uos.ac.kr/korNotice/view.do?list_id=FA2&seq=" + temp[4-i][1]
        mobile_link[i] = "redirect_UOS?tourl=http://www.uos.ac.kr/korNotice/view.do?list_id=FA2&seq=" + temp[4-i][1]
        THU[i] = ""
    }

    let NEC = ["","",0]

    UOSP.sendKaling_universal_5list(room,header,title,sub_title,link,mobile_link,THU,NEC)
}


// 채용 공지
UOSP.UOSP3 = function UOSP3(){
    let str = ""
    let SW_new = 0; // 새로운 공지가 파싱되었을 경우 1이됨

    let parse = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/korNotice/list.do?list_id=FA34").get()
        .select("ul.listType>li:not(.on)>a").get(0) // 파싱 데이터 (상위공지)
    let title = parse.ownText() // 글 제목
    let adress = parse.attr("onclick").split("'")[3] // 글 주소

    if (title == "" || title == "MIWIFI" || title == undefined) { // 오류일시 종료
        return 0;
    }
    // DB구조 : [[공지제목,공지주소,날짜],[공지제목,공지주소,날짜]]
    let temp = JSON.parse(UOSP.getDB("UOSP3_DB"))
    let pre_DB = temp[temp.length-1] // 이전 DB 마지막 부분
    if ( pre_DB[0] != String(title).replaceAmp()) { // 새로운 내용이 파싱되었을 경우
        UOSP.UOSP3_collect(Number(pre_DB[1])+1,adress) // DB 기록작업
        SW_new = 1
    }

    if (SW_new == 1) {
        for(let i=0;i<Number(roomListNum);i++){
            try{UOSP.sendKaling_notice(String(roomList[i]),"채용공지알림",String("redirect_UOS?tourl=https://www.uos.ac.kr/korNotice/view.do?list_id=FA34&seq="+adress),"","",String(title))}
            catch(e){}
        }
    }
}

UOSP.UOSP3_collect = function UOSP3_collect(start_num,stop_num){

// https://www.uos.ac.kr/korNotice/view.do?list_id=FA34&seq=1
// 채용공지의 첫 공지주소번호는 1
// DB구조 예시: [[공지제목,공지주소,날짜],[공지제목,공지주소,날짜]]
// 마지막 DB : JSON.parse(UOSP.getDB("UOSP3_DB"))[JSON.parse(UOSP.getDB("UOSP3_DB")).length-1]
// 검색코드 예시 : JSON.parse(UOSP.getDB("UOSP3_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes("전자"))
// 검색코드 예시 : JSON.parse(UOSP.getDB("UOSP3_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes("전자전기컴퓨터")).sort(function(a,b){return Number(a[1])>Number(b[1]) ? -1 : Number(a[1]) < Number(b[1]) ? 1 : 0}).map(v=>v[0]+" ("+v[2]+")\n- "+"http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq="+v[1]+"\n\n").join("").trim()


    let count_sucess = 0
    let count_failed = 0

    // 초기 DB 세팅 코드 : UOSP.setDB("UOSP3_DB",JSON.stringify([])) // 주의 : 건드리지 말 것
    var pre_DB = JSON.parse(UOSP.getDB("UOSP3_DB"))
    for(let i=Number(start_num);i<Number(stop_num)+1;i++){
        try{
            let body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/korNotice/view.do?list_id=FA34&seq="+i).get()
            let title = body.select(".listType>li>span").get(0).ownText() // 글 제목
            let date = body.select(".listType>li>ul>li").get(2).ownText() // 글 게시일

            let array = [[String(title).replaceAmp()],[String(i)],[String(date)]]
            pre_DB.push(array)


            if(i%50==0){
                Api.replyRoom(console_room_name,i+"번 주소까지 진행 완료\n성공 : "+count_sucess+"\n실패 : "+count_failed)
                java.lang.Thread.sleep(10000) // 200ms
                UOSP.setDB("UOSP3_DB",JSON.stringify(pre_DB))
                pre_DB = JSON.parse(UOSP.getDB("UOSP3_DB"))
            }
            count_sucess++
        }
        catch(e){count_failed++} // 해당 주소에 아무런 내용이 존재하지 않을 경우 아무것도 하지 않음
    }
    let temp = JSON.stringify(pre_DB)
    UOSP.setDB("UOSP3_DB",temp)
    return("성공 : "+count_sucess+"\n실패 : "+count_failed)

}

UOSP.UOSP3_search = function UOSP3_search(key){
    return JSON.parse(UOSP.getDB("UOSP3_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes(key.replace(/ /g,""))).sort(function(a,b){return Number(a[1])>Number(b[1]) ? -1 : Number(a[1]) < Number(b[1]) ? 1 : 0})
        .map(v=>v[0]+" ("+v[2]+")\n- "+"http://www.uos.ac.kr/korNotice/view.do?list_id=FA34&seq="+v[1]+"\n\n").join("").trim().substr(0,200000)
}

UOSP.UOSP3_list = function UOSP3_list(room){

    let temp = JSON.parse(UOSP.getDB("UOSP3_DB"))
    let length = temp.length
    temp = temp.splice(length-5,5)

    let header_title = "채용공지"
    let header_mobile_link = ""
    let header_web_link = ""
    let header_image = "http://15.164.226.64:7080/image/UOS_logo.png"
    let header_x = "800"
    let header_y = "136"
    let header = [header_title, header_mobile_link, header_web_link, header_image, header_x, header_y]

    let title = []
    let sub_title = []
    let link = []
    let mobile_link = []
    let THU = []

    for(let i=0 ; i<5 ; i++){
        title[i] = temp[4-i][0]
        sub_title[i] = temp[4-i][2]
        link[i] = "redirect_UOS?tourl=http://www.uos.ac.kr/korNotice/view.do?list_id=FA34&seq=" + temp[4-i][1]
        mobile_link[i] = "redirect_UOS?tourl=http://www.uos.ac.kr/korNotice/view.do?list_id=FA34&seq=" + temp[4-i][1]
        THU[i] = ""
    }

    let NEC = ["","",0]

    UOSP.sendKaling_universal_5list(room,header,title,sub_title,link,mobile_link,THU,NEC)
}


// 창업 공지
UOSP.UOSP4 = function UOSP4(){
    let str = ""
    let SW_new = 0; // 새로운 공지가 파싱되었을 경우 1이됨

    let parse = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/korNotice/list.do?list_id=FA35").get()
        .select("ul.listType>li:not(.on)>a").get(0) // 파싱 데이터 (상위공지)
    let title = parse.ownText() // 글 제목
    let adress = parse.attr("onclick").split("'")[3] // 글 주소

    if (title == "" || title == "MIWIFI" || title == undefined) { // 오류일시 종료
        return 0;
    }
    // DB구조 : [[공지제목,공지주소,날짜],[공지제목,공지주소,날짜]]
    let temp = JSON.parse(UOSP.getDB("UOSP4_DB"))
    let pre_DB = temp[temp.length-1] // 이전 DB 마지막 부분
    if ( pre_DB[0] != String(title).replaceAmp()) { // 새로운 내용이 파싱되었을 경우
        UOSP.UOSP4_collect(Number(pre_DB[1])+1,adress) // DB 기록작업
        SW_new = 1
    }

    if (SW_new == 1) {
        for(let i=0;i<Number(roomListNum);i++){
            try{UOSP.sendKaling_notice(String(roomList[i]),"창업공지알림",String("redirect_UOS?tourl=https://www.uos.ac.kr/korNotice/view.do?list_id=FA35&seq="+adress),"","",String(title))}
            catch(e){}
        }
    }
}

UOSP.UOSP4_collect = function UOSP4_collect(start_num,stop_num){

// https://www.uos.ac.kr/korNotice/view.do?list_id=FA35&seq=1
// 창업공지의 첫 공지주소번호는 1
// DB구조 예시: [[공지제목,공지주소,날짜],[공지제목,공지주소,날짜]]
// 마지막 DB : JSON.parse(UOSP.getDB("UOSP3_DB"))[JSON.parse(UOSP.getDB("UOSP3_DB")).length-1]
// 검색코드 예시 : JSON.parse(UOSP.getDB("UOSP3_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes("전자"))
// 검색코드 예시 : JSON.parse(UOSP.getDB("UOSP3_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes("전자전기컴퓨터")).sort(function(a,b){return Number(a[1])>Number(b[1]) ? -1 : Number(a[1]) < Number(b[1]) ? 1 : 0}).map(v=>v[0]+" ("+v[2]+")\n- "+"http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq="+v[1]+"\n\n").join("").trim()


    let count_sucess = 0
    let count_failed = 0

    // 초기 DB 세팅 코드 : UOSP.setDB("UOSP4_DB",JSON.stringify([])) // 주의 : 건드리지 말 것
    var pre_DB = JSON.parse(UOSP.getDB("UOSP4_DB"))
    for(let i=Number(start_num);i<Number(stop_num)+1;i++){
        try{
            let body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/korNotice/view.do?list_id=FA35&seq="+i).get()
            let title = body.select(".listType>li>span").get(0).ownText() // 글 제목
            let date = body.select(".listType>li>ul>li").get(2).ownText() // 글 게시일

            let array = [[String(title).replaceAmp()],[String(i)],[String(date)]]
            pre_DB.push(array)


            if(i%50==0){
                Api.replyRoom(console_room_name,i+"번 주소까지 진행 완료\n성공 : "+count_sucess+"\n실패 : "+count_failed)
                java.lang.Thread.sleep(10000) // 200ms
                UOSP.setDB("UOSP4_DB",JSON.stringify(pre_DB))
                pre_DB = JSON.parse(UOSP.getDB("UOSP4_DB"))
            }
            count_sucess++
        }
        catch(e){count_failed++} // 해당 주소에 아무런 내용이 존재하지 않을 경우 아무것도 하지 않음
    }
    let temp = JSON.stringify(pre_DB)
    UOSP.setDB("UOSP4_DB",temp)
    return("성공 : "+count_sucess+"\n실패 : "+count_failed)

}

UOSP.UOSP4_search = function UOSP4_search(key){
    return JSON.parse(UOSP.getDB("UOSP4_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes(key.replace(/ /g,""))).sort(function(a,b){return Number(a[1])>Number(b[1]) ? -1 : Number(a[1]) < Number(b[1]) ? 1 : 0})
        .map(v=>v[0]+" ("+v[2]+")\n- "+"http://www.uos.ac.kr/korNotice/view.do?list_id=FA35&seq="+v[1]+"\n\n").join("").trim().substr(0,200000)
}

UOSP.UOSP4_list = function UOSP4_list(room){

    let temp = JSON.parse(UOSP.getDB("UOSP4_DB"))
    let length = temp.length
    temp = temp.splice(length-5,5)

    let header_title = "창업공지"
    let header_mobile_link = ""
    let header_web_link = ""
    let header_image = "http://15.164.226.64:7080/image/UOS_logo.png"
    let header_x = "800"
    let header_y = "136"
    let header = [header_title, header_mobile_link, header_web_link, header_image, header_x, header_y]

    let title = []
    let sub_title = []
    let link = []
    let mobile_link = []
    let THU = []

    for(let i=0 ; i<5 ; i++){
        title[i] = temp[4-i][0]
        sub_title[i] = temp[4-i][2]
        link[i] = "redirect_UOS?tourl=http://www.uos.ac.kr/korNotice/view.do?list_id=FA35&seq=" + temp[4-i][1]
        mobile_link[i] = "redirect_UOS?tourl=http://www.uos.ac.kr/korNotice/view.do?list_id=FA35&seq=" + temp[4-i][1]
        THU[i] = ""
    }

    let NEC = ["","",0]

    UOSP.sendKaling_universal_5list(room,header,title,sub_title,link,mobile_link,THU,NEC)
}


// 장학 공지
UOSP.UOSP5 = function UOSP5(){
    let str = ""
    let SW_new = 0; // 새로운 공지가 파싱되었을 경우 1이됨

    let parse = org.jsoup.Jsoup.connect("https://scholarship.uos.ac.kr/scholarship/main.do").get().select(".main_notice>ul>.main_notice_news>.f_left>a")
    let title = parse.get(0).ownText()
    let address = parse.attr("onclick").split("'")[1]

    if (title == "" || title == "MIWIFI" || title == undefined) { // 오류일시 종료
        return 0;
    }
    // DB구조 : [[공지제목,날짜],[공지제목,날짜]]
    let temp = JSON.parse(UOSP.getDB("UOSP5_DB"))
    let pre_DB = temp[temp.length-1] // 이전 DB 마지막 부분
    if ( pre_DB[0] != String(title).replaceAmp()) { // 새로운 내용이 파싱되었을 경우
        temp.push([title,address])
        UOSP.setDB("UOSP5_DB",JSON.stringify(temp))
        SW_new = 1
    }

    if (SW_new == 1) {
        for(let i=0;i<Number(roomListNum);i++){
            try{UOSP.sendKaling_notice(String(roomList[i]),"창업공지알림",String("redirect_UOS?tourl=https://scholarship.uos.ac.kr/scholarship/notice/notice/list.do?brdBbsseq=1"),"","",String(title))}
            catch(e){}
        }
    }
}

UOSP.UOSP5_search = function UOSP5_search(key){
    return JSON.parse(UOSP.getDB("UOSP5_DB")).filter(v=>String(v).replace(/ /g,"").includes(key.replace(/ /g,""))).sort(function(a,b){return Number(a[1])>Number(b[1]) ? -1 : Number(a[1]) < Number(b[1]) ? 1 : 0})
        .map(v=>v[0]+" ("+v[2]+")\n- "+"http://www.uos.ac.kr/korNotice/view.do?list_id=FA35&seq="+v[1]+"\n\n").join("").trim().substr(0,200000)
}

UOSP.UOSP5_list = function UOSP5_list(room){

    let temp = JSON.parse(UOSP.getDB("UOSP5_DB"))
    let length = temp.length
    temp = temp.splice(length-5,5)

    let header_title = "채용공지"
    let header_mobile_link = ""
    let header_web_link = ""
    let header_image = "http://15.164.226.64:7080/image/UOS_logo.png"
    let header_x = "800"
    let header_y = "136"
    let header = [header_title, header_mobile_link, header_web_link, header_image, header_x, header_y]

    let title = []
    let sub_title = []
    let link = []
    let mobile_link = []
    let THU = []

    for(let i=0 ; i<5 ; i++){
        try{
            title[i] = temp[4-i][0]
            sub_title[i] = temp[4-i][1]
            link[i] = "redirect_UOS?tourl=https://scholarship.uos.ac.kr/scholarship/main.do"
            mobile_link[i] = "redirect_UOS?tourl=https://scholarship.uos.ac.kr/scholarship/main.do"
            THU[i] = ""
        }
        catch(e){
            title[i] = "-"
            sub_title[i] = "-"
            link[i] = "redirect_UOS?tourl=https://scholarship.uos.ac.kr/scholarship/main.do"
            mobile_link[i] = "redirect_UOS?tourl=https://scholarship.uos.ac.kr/scholarship/main.do"
            THU[i] = ""
        }

    }

    let NEC = ["","",0]

    UOSP.sendKaling_universal_5list(room,header,title,sub_title,link,mobile_link,THU,NEC)
}



// 시설공사 공지
UOSP.UOSP6 = function UOSP6(){
    let str = ""
    let SW_new = 0; // 새로운 공지가 파싱되었을 경우 1이됨

    let parse = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/korNotice/list.do?list_id=FA25").get()
        .select("ul.listType>li:not(.on)>a").get(0) // 파싱 데이터 (상위공지)
    let title = parse.ownText() // 글 제목
    let adress = parse.attr("onclick").split("'")[3] // 글 주소

    if (title == "" || title == "MIWIFI" || title == undefined) { // 오류일시 종료
        return 0;
    }
    // DB구조 : [[공지제목,공지주소,날짜],[공지제목,공지주소,날짜]]
    let temp = JSON.parse(UOSP.getDB("UOSP6_DB"))
    let pre_DB = temp[temp.length-1] // 이전 DB 마지막 부분
    if ( pre_DB[0] != String(title).replaceAmp()) { // 새로운 내용이 파싱되었을 경우
        UOSP.UOSP6_collect(Number(pre_DB[1])+1,adress) // DB 기록작업
        SW_new = 1
    }

    if (SW_new == 1) {
        for(let i=0;i<Number(roomListNum);i++){
            try{UOSP.sendKaling_notice(String(roomList[i]),"시설공사공지알림",String("redirect_UOS?tourl=https://www.uos.ac.kr/korNotice/view.do?list_id=FA25&seq="+adress),"","",String(title))}
            catch(e){}
        }
    }
}

UOSP.UOSP6_collect = function UOSP6_collect(start_num,stop_num){

// https://www.uos.ac.kr/korNotice/view.do?list_id=FA25&seq=31
// 시설공사공지의 첫 공지주소번호는 31
// DB구조 예시: [[공지제목,공지주소,날짜],[공지제목,공지주소,날짜]]
// 마지막 DB : JSON.parse(UOSP.getDB("UOSP6_DB"))[JSON.parse(UOSP.getDB("UOSP6_DB")).length-1]

    let count_sucess = 0
    let count_failed = 0

    // 초기 DB 세팅 코드 : UOSP.setDB("UOSP6_DB",JSON.stringify([])) // 주의 : 건드리지 말 것
    var pre_DB = JSON.parse(UOSP.getDB("UOSP6_DB"))
    for(let i=Number(start_num);i<Number(stop_num)+1;i++){
        try{
            let body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/korNotice/view.do?list_id=FA25&seq="+i).get()
            let title = body.select(".listType>li>span").get(0).ownText() // 글 제목
            let date = body.select(".listType>li>ul>li").get(2).ownText() // 글 게시일

            let array = [[String(title).replaceAmp()],[String(i)],[String(date)]]
            pre_DB.push(array)


            if(i%50==0){
                Api.replyRoom(console_room_name,i+"번 주소까지 진행 완료")
                java.lang.Thread.sleep(10000) // 200ms
                UOSP.setDB("UOSP6_DB",JSON.stringify(pre_DB))
                pre_DB = JSON.parse(UOSP.getDB("UOSP6_DB"))
            }
            count_sucess++
        }
        catch(e){count_failed++} // 해당 주소에 아무런 내용이 존재하지 않을 경우 아무것도 하지 않음
    }
    let temp = JSON.stringify(pre_DB)
    UOSP.setDB("UOSP6_DB",temp)
    return("성공 : "+count_sucess+"\n실패 : "+count_failed)

}

UOSP.UOSP6_search = function UOSP6_search(key){
    return JSON.parse(UOSP.getDB("UOSP6_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes(key.replace(/ /g,""))).sort(function(a,b){return Number(a[1])>Number(b[1]) ? -1 : Number(a[1]) < Number(b[1]) ? 1 : 0})
        .map(v=>v[0]+" ("+v[2]+")\n- "+"http://www.uos.ac.kr/korNotice/view.do?list_id=FA25&seq="+v[1]+"\n\n").join("").trim().substr(0,200000)
}

UOSP.UOSP6_list = function UOSP6_list(room){

    let temp = JSON.parse(UOSP.getDB("UOSP6_DB"))
    let length = temp.length
    temp = temp.splice(length-5,5)

    let header_title = "시설공사공지"
    let header_mobile_link = ""
    let header_web_link = ""
    let header_image = "http://15.164.226.64:7080/image/UOS_logo.png"
    let header_x = "800"
    let header_y = "136"
    let header = [header_title, header_mobile_link, header_web_link, header_image, header_x, header_y]

    let title = []
    let sub_title = []
    let link = []
    let mobile_link = []
    let THU = []

    for(let i=0 ; i<5 ; i++){
        title[i] = temp[4-i][0]
        sub_title[i] = temp[4-i][2]
        link[i] = "redirect_UOS?tourl=http://www.uos.ac.kr/korNotice/view.do?list_id=FA25&seq=" + temp[4-i][1]
        mobile_link[i] = "redirect_UOS?tourl=http://www.uos.ac.kr/korNotice/view.do?list_id=FA25&seq=" + temp[4-i][1]
        THU[i] = ""
    }

    let NEC = ["","",0]

    UOSP.sendKaling_universal_5list(room,header,title,sub_title,link,mobile_link,THU,NEC)
}

//  학과공지 파싱
// 1: 전자전기컴퓨터공학부 2: 화학공학과 3: 기계정보공학과 4: 신소재공학과 5: 토목공학과 6: 컴퓨터과학부
// 7: 경영학부
// 8: 행정학과 9: 국제관계학과 10: 경제학부 11: 사회복지학과 12: 세무학과
// 13: 영어영문학과 14: 국어국문학과 15: 국사학과 16: 철학과 17: 중국어문화학과
// 18: 수학과 19: 통계학과 20: 물리학과 21: 생명과학과 22: 환경원예학과


UOSP.UOS_engineering = function UOS_engineering(opt){ // 공과대학 최신공지 제목을 파싱하여 어레이로 반환

    let return_array = []
    let SW_new = 0; // 새로운 공지가 파싱되었을 경우 1이됨

    let body
    if(opt=="1"){body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010058&epTicket=INV").get()} // 전자전기컴퓨터공학부
    else if(opt=="2"){body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010059&epTicket=INV").get()} // 화학공학과
    else if(opt=="3"){body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010060&epTicket=INV").get()} // 기계정보공학과
    else if(opt=="4"){body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010061&epTicket=INV").get()} // 신소재공학과
    else if(opt=="5"){body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010382&epTicket=INV").get()} // 토목공학과
    else if(opt=="6"){body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010383&epTicket=INV").get()} // 컴퓨터과학부

    let temp = body.select(".tb-body").toArray().filter(v=>v.select("li.tb-wid01").text()!="[공지]")[0]

    let title = temp.select("li.tb-wid02").text()
    let date = temp.select("li.tb-wid05").text()

    if (title == "" || title == "MIWIFI" || title == undefined) {return 0;} // 오류일시 종료

    let engineering_DB = JSON.parse(UOSP.getDB("UOS_engineering"+opt+"_DB"))

    // DB구조 : [공지제목,공지제목,공지제목]
    let pre_DB = engineering_DB[engineering_DB.length-1] // 이전 DB 마지막 부분

    if(pre_DB == undefined){ SW_new = 1 }
    else if ( pre_DB[1] != String(title).replaceAmp()) { SW_new = 1 } // 새로운 내용이 파싱되었을 경우 SW 1

    if (SW_new == 1) {
        return_array = [[String(opt)],[String(title)],[String(date)]]
        engineering_DB.push(return_array)
        UOSP.setDB("UOS_engineering"+opt+"_DB", JSON.stringify(engineering_DB))
        return return_array
    }
    return undefined
}

UOSP.UOS_biz = function UOS_biz(){ // 경영학부 공지 파싱 (어레이 반환)

    let return_array = []
    let SW_new = 0; // 새로운 공지가 파싱되었을 경우 1이됨
    let opt = "7"

    let body = org.jsoup.Jsoup.connect("https://biz.uos.ac.kr/korNotice/list.do?list_id=20008N2&epTicket=INV").get()

    let title = body.select(".listType>li:not(.on)>a").get(0).ownText()
    let date = body.select(".listType>li:not(.on)>ul>li").get(1).ownText()

    if (title == "" || title == "MIWIFI" || title == undefined) {return 0;} // 오류일시 종료

    let biz_DB = JSON.parse(UOSP.getDB("UOS_biz_DB"))

    // DB구조 : [공지제목,공지제목,공지제목]
    let pre_DB = biz_DB[biz_DB.length-1] // 이전 DB 마지막 부분

    if(pre_DB == undefined){ SW_new = 1 }
    else if ( pre_DB[1] != String(title).replaceAmp()) { SW_new = 1 } // 새로운 내용이 파싱되었을 경우 SW 1

    if (SW_new == 1) {
        return_array = [[String(opt)],[String(title)],[String(date)]]
        biz_DB.push(return_array)
        UOSP.setDB("UOS_biz_DB", JSON.stringify(biz_DB))
        return return_array
    }
    return undefined
}

UOSP.UOS_social = function UOS_social(opt){ // 정경대학 및 인문대학 공지 (array 반환)

    let return_array = []
    let SW_new = 0; // 새로운 공지가 파싱되었을 경우 1이됨

    let body
    if(opt=="8"){body = org.jsoup.Jsoup.connect("https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000100002").get()} // 행정학과
    else if(opt=="9"){body = org.jsoup.Jsoup.connect("https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000010055&epTicket=ST-331538-EvseKnaZmrZZC4THhvDFMXvsK0UJXZfgCVQ-22").get()} // 국제관계학과
    else if(opt=="10"){body = org.jsoup.Jsoup.connect("https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000010057&epTicket=ST-331566-BHszXHC0b5FdFp1RjlWhASutG0tvCmiNkIE-22").get()} // 경제학부
    else if(opt=="11"){body = org.jsoup.Jsoup.connect("https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&seq=1946&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010072&epTicket=ST-331596-moOaQeUAwN1abnAplueCx7KOeWTjskUrALK-22").get()} // 사회복지학과
    else if(opt=="12"){body = org.jsoup.Jsoup.connect("https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&seq=1958&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010074&epTicket=ST-331603-QDYHuHqTOlcLyAXnnIYRKWTORGh77Cw2kj6-22").get()} // 세무학과
    else if(opt=="13"){body = org.jsoup.Jsoup.connect("https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&cate_id2=000010067&epTicket=ST-333550-w5Rdf3z0tynxbd3zSvvEs4EvNci7trL1Gdu-22").get()} // 영어영문학과
    else if(opt=="14"){body = org.jsoup.Jsoup.connect("https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&cate_id2=000010068&epTicket=ST-344643-4OWAYFq6lufxmDdZtDHZp2ZAYTqkdIpgxQA-21").get()} // 국어국문학과
    else if(opt=="15"){body = org.jsoup.Jsoup.connect("https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&cate_id2=000010069&epTicket=ST-333599-I6bPbbT4PDKAegNJkBxmuFMfa24L6lXWr4e-22").get()} // 국사학과
    else if(opt=="16"){body = org.jsoup.Jsoup.connect("https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&cate_id2=000010070&epTicket=ST-333607-M0RciE4jasXGDNYqS3ZXZdjdFhTjk9qUzBD-22").get()} // 철학과
    else if(opt=="17"){body = org.jsoup.Jsoup.connect("https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&seq=1286&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000011580&epTicket=ST-333976-ZiTe1l0aw7RJgch30bDdX2zIkPWeEEbsUwL-22").get()} // 중국어문화학과
    else if(opt=="18"){body = org.jsoup.Jsoup.connect("https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&seq=1021&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010064&epTicket=ST-333692-xcUka6iAdTHnhtkxaVdjf46JiCaasAbHX5O-22").get()} // 수학과
    else if(opt=="19"){body = org.jsoup.Jsoup.connect("https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&seq=1018&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010063&epTicket=ST-333718-f5CobZcYSO7AaYLfnO3joJTx6TKEcfaOIwT-22").get()} // 통계학과
    else if(opt=="20"){body = org.jsoup.Jsoup.connect("https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&cate_id2=000010065&epTicket=ST-333724-AsMdLBru9Tz6Ofk979Y1qKAkUcdg6OQhmQE-22").get()} // 물리학과
    else if(opt=="21"){body = org.jsoup.Jsoup.connect("https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&cate_id2=000010066&epTicket=ST-333733-vkgXVJerAgWeP0fliXKt6CfGcqY5BvQb7Hf-22").get()} // 생명과학과
    else if(opt=="22"){body = org.jsoup.Jsoup.connect("https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&seq=1022&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010062&epTicket=ST-333843-rWLpoZihcm6o07bbaib0JqFnTyMlkIvPosn-22").get()} // 환경원예학과

    let temp = body.select(".tb-body").toArray().filter(v=>v.select("li.tb-wid01").text()!="[공지]")[0]

    let title = temp.select("li.tb-wid02").text()
    let date = temp.select("li.tb-wid05").text()

    if (title == "" || title == "MIWIFI" || title == undefined) {return 0;} // 오류일시 종료

    let social_DB = JSON.parse(UOSP.getDB("UOS_social"+opt+"_DB"))

    // DB구조 : [공지제목,공지제목,공지제목]
    let pre_DB = social_DB[social_DB.length-1] // 이전 DB 마지막 부분

    if(pre_DB == undefined){ SW_new = 1 }
    else if ( pre_DB[1] != String(title).replaceAmp()) { SW_new = 1 } // 새로운 내용이 파싱되었을 경우 SW 1

    if (SW_new == 1) {
        return_array = [[String(opt)],[String(title)],[String(date)]]
        social_DB.push(return_array)
        UOSP.setDB("UOS_social"+opt+"_DB", JSON.stringify(social_DB))
        return return_array
    }
    return undefined
}

UOSP.UOS_temp_controller = function UOS_temp_controller(opt,mod){

    let result
    if(Number(opt)>0&&Number(opt)<7){result = UOSP.UOS_engineering(opt)}
    else if(Number(opt)==7){result = UOSP.UOS_biz()}
    if(Number(opt)>7&&Number(opt)<23){result = UOSP.UOS_social(opt)}

    let return_data
    if(result!=undefined || mod=="ON"){
        let pre_DB = JSON.parse(UOSP.getDB("UOSP_temp"))
        if(result!=undefined){pre_DB.push(result)}
        return_data = pre_DB
        UOSP.setDB("UOSP_temp",JSON.stringify(return_data))
    }

    let length
    try{length = return_data.length}
    catch(e){return 1}

    if(length==5||mod=="ON"){ // 데이터가 5개가 쌓이면 리턴을 하지 않고 그냥 바로 공지로 내보냄

        let title
        try{title = return_data.map(v=>v[1])}
        catch(e){return 2}

        let URL = []
        let sub_title = []
        for(let i=0;i<5;i++){
            if(return_data[i]==undefined){
                URL[i] = String("")
                sub_title[i] = String("")
                title[i] = String("")
            }
            else if(return_data[i][0]=="1"){
                URL[i] = String("redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010058&epTicket=INV")
                sub_title[i] = String("전자전기컴퓨터공학부")
            }
            else if(return_data[i][0]=="2"){
                URL[i] = String("redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010059&epTicket=INV")
                sub_title[i] = String("화학공학과")
            }
            else if(return_data[i][0]=="3"){
                URL[i] = String("redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010060&epTicket=INV")
                sub_title[i] = String("기계정보공학과")
            }
            else if(return_data[i][0]=="4"){
                URL[i] = String("redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010061&epTicket=INV")
                sub_title[i] = String("신소재공학과")
            }
            else if(return_data[i][0]=="5"){
                URL[i] = String("redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010382&epTicket=INV")
                sub_title[i] = String("토목공학과")
            }
            else if(return_data[i][0]=="6"){
                URL[i] = String("redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010383&epTicket=INV")
                sub_title[i] = String("컴퓨터과학부")
            }
            else if(return_data[i][0]=="7"){
                URL[i] = String("redirect_UOS?tourl=https://biz.uos.ac.kr/korNotice/list.do?list_id=20008N2&epTicket=INV")
                sub_title[i] = String("경영학부")
            }
            else if(return_data[i][0]=="8"){
                URL[i] = String("redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000100002")
                sub_title[i] = String("행정학과")
            }
            else if(return_data[i][0]=="9"){
                URL[i] = String("redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000010055&epTicket=ST-331538-EvseKnaZmrZZC4THhvDFMXvsK0UJXZfgCVQ-22")
                sub_title[i] = String("국제관계학과")
            }
            else if(return_data[i][0]=="10"){
                URL[i] = String("redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000010057&epTicket=ST-331566-BHszXHC0b5FdFp1RjlWhASutG0tvCmiNkIE-22")
                sub_title[i] = String("경제학부")
            }
            else if(return_data[i][0]=="11"){
                URL[i] = String("redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&seq=1946&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010072&epTicket=ST-331596-moOaQeUAwN1abnAplueCx7KOeWTjskUrALK-22")
                sub_title[i] = String("사회복지학과")
            }
            else if(return_data[i][0]=="12"){
                URL[i] = String("redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&seq=1958&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010074&epTicket=ST-331603-QDYHuHqTOlcLyAXnnIYRKWTORGh77Cw2kj6-22")
                sub_title[i] = String("세무학과")
            }
            else if(return_data[i][0]=="13"){
                URL[i] = String("redirect_UOS?tourl=https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&cate_id2=000010067&epTicket=ST-333550-w5Rdf3z0tynxbd3zSvvEs4EvNci7trL1Gdu-22")
                sub_title[i] = String("영어영문학과")
            }
            else if(return_data[i][0]=="14"){
                URL[i] = String("redirect_UOS?tourl=https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&cate_id2=000010068&epTicket=ST-344643-4OWAYFq6lufxmDdZtDHZp2ZAYTqkdIpgxQA-21")
                sub_title[i] = String("국어국문학과")
            }
            else if(return_data[i][0]=="15"){
                URL[i] = String("redirect_UOS?tourl=https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&cate_id2=000010069&epTicket=ST-333599-I6bPbbT4PDKAegNJkBxmuFMfa24L6lXWr4e-22")
                sub_title[i] = String("국사학과")
            }
            else if(return_data[i][0]=="16"){
                URL[i] = String("redirect_UOS?tourl=https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&cate_id2=000010070&epTicket=ST-333607-M0RciE4jasXGDNYqS3ZXZdjdFhTjk9qUzBD-22")
                sub_title[i] = String("철학과")
            }
            else if(return_data[i][0]=="17"){
                URL[i] = String("redirect_UOS?tourl=https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&seq=1286&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000011580&epTicket=ST-333976-ZiTe1l0aw7RJgch30bDdX2zIkPWeEEbsUwL-22")
                sub_title[i] = String("중국어문화학과")
            }
            else if(return_data[i][0]=="18"){
                URL[i] = String("redirect_UOS?tourl=https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&seq=1021&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010064&epTicket=ST-333692-xcUka6iAdTHnhtkxaVdjf46JiCaasAbHX5O-22")
                sub_title[i] = String("수학과")
            }
            else if(return_data[i][0]=="19"){
                URL[i] = String("redirect_UOS?tourl=https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&seq=1018&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010063&epTicket=ST-333718-f5CobZcYSO7AaYLfnO3joJTx6TKEcfaOIwT-22")
                sub_title[i] = String("통계학과")
            }
            else if(return_data[i][0]=="20"){
                URL[i] = String("redirect_UOS?tourl=https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&cate_id2=000010065&epTicket=ST-333724-AsMdLBru9Tz6Ofk979Y1qKAkUcdg6OQhmQE-22")
                sub_title[i] = String("물리학과")
            }
            else if(return_data[i][0]=="21"){
                URL[i] = String("redirect_UOS?tourl=https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&cate_id2=000010066&epTicket=ST-333733-vkgXVJerAgWeP0fliXKt6CfGcqY5BvQb7Hf-22")
                sub_title[i] = String("생명과학과")
            }
            else if(return_data[i][0]=="22"){
                URL[i] = String("redirect_UOS?tourl=https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&seq=1022&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010062&epTicket=ST-333843-rWLpoZihcm6o07bbaib0JqFnTyMlkIvPosn-22")
                sub_title[i] = String("환경원예학과")
            }
        }
        let header_title = "학과공지"

        if(mod!="ON"){
            for(let i=0;i<Number(roomListNum);i++){
                try{UOSP.sendKaling_5list(String(roomList[i]), header_title, title, sub_title, URL, ["","","","",""])}
                catch(e){
                    /*
                    Api.replyRoom(console_room_name, "Kaling Error\n" + e + "\n" + e.stack + "\n" + e.rhinoException);
                    Api.replyRoom(console_room_name,"roomList : "+roomList[i])
                    Api.replyRoom(console_room_name,"title : "+title)
                    Api.replyRoom(console_room_name,"sub_title : "+sub_title)
                    Api.replyRoom(console_room_name,"path : "+URL)
                     */
                }
            }
        }
        else if(mod=="ON"){
            for(let i=0;i<Number(roomListNum);i++){
                try{
                    if(length==1){UOSP.sendKaling_1list(String(roomList[i]), header_title, title, sub_title, URL, [""])}
                    else if(length==2){UOSP.sendKaling_2list(String(roomList[i]), header_title, title, sub_title, URL, ["",""])}
                    else if(length==3){UOSP.sendKaling_3list(String(roomList[i]), header_title, title, sub_title, URL, ["","",""])}
                    else if(length==4){UOSP.sendKaling_4list(String(roomList[i]), header_title, title, sub_title, URL, ["","","",""])}
                    else if(length==5){UOSP.sendKaling_5list(String(roomList[i]), header_title, title, sub_title, URL, ["","","","",""])}
                }
                catch(e){
                    /*
                    Api.replyRoom(console_room_name, "Kaling Error\n" + e + "\n" + e.stack + "\n" + e.rhinoException);
                    Api.replyRoom(console_room_name,"roomList : "+roomList[i])
                    Api.replyRoom(console_room_name,"title : "+title)
                    Api.replyRoom(console_room_name,"sub_title : "+sub_title)
                    Api.replyRoom(console_room_name,"path : "+URL)
                    */

                }
            }
        }


        UOSP.setDB("UOSP_temp",JSON.stringify([]))
        return undefined
    }
    return return_data
}

UOSP.UOSP_depart_check = function UOSP_depart_check(room,mod){

    let opt = ""

    if(mod=="전전컴"||mod=="전자전기컴퓨터공학부"){ opt = 1}
    else if(mod=="화공"||mod=="화학과"||mod=="화공과"||mod=="화학공학과"){ opt = 2}
    else if(mod=="기계공"||mod=="기계정보공"||mod=="기계정보공학과"){ opt = 3}
    else if(mod=="신소재"||mod=="신소재공학과"){ opt = 4}
    else if(mod=="토목"||mod=="토목공"||mod=="토목공학과"){ opt = 5}
    else if(mod=="컴과"||mod=="컴공"||mod=="컴퓨터과학과"||mod=="컴퓨터공학과"||mod=="컴퓨터과학부"){ opt = 6}
    else if(mod=="경영"||mod=="경영학과"||mod=="경영학부"){ opt = 7}
    else if(mod=="행정"||mod=="행정학과"){ opt = 8}
    else if(mod=="국관"||mod=="국제관계"||mod=="국제관계학과"){ opt = 9}
    else if(mod=="경제"||mod=="경제학과"||mod=="경제학부"){ opt = 10}
    else if(mod=="사복"||mod=="사회복지"||mod=="사회복지학과"){ opt = 11}
    else if(mod=="세무"||mod=="세무학과"){ opt = 12}
    else if(mod=="영문과"||mod=="영어과"||mod=="영문학과"||mod=="영어학과"||mod=="영어영문학과"){ opt = 13}
    else if(mod=="국문과"||mod=="국어과"||mod=="국문학과"||mod=="국어학과"||mod=="국어국문과"){ opt = 14}
    else if(mod=="국사"||mod=="국사학과"){ opt = 15}
    else if(mod=="철학"||mod=="철학과"){ opt = 16}
    else if(mod=="중문과"||mod=="중어과"||mod=="중문학과"||mod=="중국어과"||mod=="중국어문화학과"){ opt = 17}
    else if(mod=="수학"||mod=="수학과"){ opt = 18}
    else if(mod=="통계"||mod=="통계학과"){ opt = 19}
    else if(mod=="물리"||mod=="물리학과"){ opt = 20}
    else if(mod=="생명"||mod=="생명공학과"||mod=="생명과학과"){ opt = 21}
    else if(mod=="환원"||mod=="환경원예"||mod=="환경원예학과"){ opt = 22}

    if(opt!=""){ UOSP.UOSP_depart_list(room,opt) }

}

UOSP.UOSP_depart_list = function UOSP_depart_list(room,opt){

    let temp

    if(Number(opt)>0&&Number(opt)<7){temp = JSON.parse(UOSP.getDB("UOS_engineering"+opt+"_DB"))}
    else if(Number(opt)==7){temp = JSON.parse(UOSP.getDB("UOS_biz_DB"))}
    if(Number(opt)>7&&Number(opt)<23){temp = JSON.parse(UOSP.getDB("UOS_social"+opt+"_DB"))}

    let length = temp.length
    temp = temp.splice(length-5,5)

    let title = []
    let sub_title = []
    let link = []
    let mobile_link = []
    let THU = []

    let header_title

    if(Number(opt)==1){
        header_title = "전자전기컴퓨터공학부"
        let temp = "redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010058&epTicket=INV"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==2){
        header_title = "화학공학과"
        let temp = "redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010059&epTicket=INV"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==3){
        header_title = "기계정보공학과"
        let temp = "redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010060&epTicket=INV"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }

    else if(Number(opt)==4){
        header_title = "신소재공학과"
        let temp = "redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010061&epTicket=INV"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==5){
        header_title = "토목공학과"
        let temp = "redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010382&epTicket=INV"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==6){
        header_title = "컴퓨터과학부"
        let temp = "redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010383&epTicket=INV"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==7){
        header_title = "경영학부"
        let temp = "redirect_UOS?tourl=https://biz.uos.ac.kr/korNotice/list.do?list_id=20008N2&epTicket=INV"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==8){
        header_title = "행정학과"
        let temp = "redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000100002"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==9){
        header_title = "국제관계학과"
        let temp = "redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000010055&epTicket=ST-331538-EvseKnaZmrZZC4THhvDFMXvsK0UJXZfgCVQ-22"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==10){
        header_title = "경제학부"
        let temp = "redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000010057&epTicket=ST-331566-BHszXHC0b5FdFp1RjlWhASutG0tvCmiNkIE-22"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==11){
        header_title = "사회복지학과"
        let temp = "redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&seq=1946&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010072&epTicket=ST-331596-moOaQeUAwN1abnAplueCx7KOeWTjskUrALK-22"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==12){
        header_title = "세무학과"
        let temp = "redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&seq=1958&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010074&epTicket=ST-331603-QDYHuHqTOlcLyAXnnIYRKWTORGh77Cw2kj6-22"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==13){
        header_title = "영어영문학과"
        let temp = "redirect_UOS?tourl=https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&cate_id2=000010067&epTicket=ST-333550-w5Rdf3z0tynxbd3zSvvEs4EvNci7trL1Gdu-22"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==14){
        header_title = "국어국문학과"
        let temp = "redirect_UOS?tourl=https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&seq=1290&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_i"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==15){
        header_title = "국사학과"
        let temp = "redirect_UOS?tourl=https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&cate_id2=000010069&epTicket=ST-333599-I6bPbbT4PDKAegNJkBxmuFMfa24L6lXWr4e-22"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==16){
        header_title = "철학과"
        let temp = "redirect_UOS?tourl=https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&cate_id2=000010070&epTicket=ST-333607-M0RciE4jasXGDNYqS3ZXZdjdFhTjk9qUzBD-22"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==17){
        header_title = "중국어문화학과"
        let temp = "redirect_UOS?tourl=https://liberalarts.uos.ac.kr/liberalarts/korNotice/allList.do?list_id=human01&seq=1286&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000011580&epTicket=ST-333976-ZiTe1l0aw7RJgch30bDdX2zIkPWeEEbsUwL-22"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==18){
        header_title = "수학과"
        let temp = "redirect_UOS?tourl=https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&seq=1021&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010064&epTicket=ST-333692-xcUka6iAdTHnhtkxaVdjf46JiCaasAbHX5O-22"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==19){
        header_title = "통계학과"
        let temp = "redirect_UOS?tourl=https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&seq=1018&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010063&epTicket=ST-333718-f5CobZcYSO7AaYLfnO3joJTx6TKEcfaOIwT-22"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==20){
        header_title = "물리학과"
        let temp = "redirect_UOS?tourl=https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&cate_id2=000010065&epTicket=ST-333724-AsMdLBru9Tz6Ofk979Y1qKAkUcdg6OQhmQE-22"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==21){
        header_title = "생명과학과"
        let temp = "redirect_UOS?tourl=https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&cate_id2=000010066&epTicket=ST-333733-vkgXVJerAgWeP0fliXKt6CfGcqY5BvQb7Hf-22"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }
    else if(Number(opt)==22){
        header_title = "환경원예학과"
        let temp = "redirect_UOS?tourl=https://science.uos.ac.kr/science/korNotice/allList.do?list_id=scien01&seq=1022&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010062&epTicket=ST-333843-rWLpoZihcm6o07bbaib0JqFnTyMlkIvPosn-22"
        link = [temp,temp,temp,temp,temp]
        mobile_link = [temp,temp,temp,temp,temp]
    }

    let header_mobile_link = ""
    let header_web_link = ""
    let header_image = "http://15.164.226.64:7080/image/UOS_logo.png"
    let header_x = "800"
    let header_y = "136"
    let header = [header_title, header_mobile_link, header_web_link, header_image, header_x, header_y]



    for(let i=0 ; i<5 ; i++){
        try{
            title[i] = temp[4-i][1]
            sub_title[i] = temp[4-i][2]
            THU[i] = ""
        }
        catch(e){
            title[i] = "-"
            sub_title[i] = "-"
            link[i] = "redirect_UOS?tourl=https://portal.uos.ac.kr"
            mobile_link[i] = "redirect_UOS?tourl=https://portal.uos.ac.kr"
            THU[i] = ""
        }

    }

    let NEC = ["","",0]

    UOSP.sendKaling_universal_5list(room,header,title,sub_title,link,mobile_link,THU,NEC)
}


UOSP.clearDB = function clearDB(){
    UOSP.setDB("UOSP_temp",JSON.stringify([]))
    UOSP.setDB("UOSP_temp_biz",JSON.stringify([]))
    UOSP.setDB("UOSP_temp_social",JSON.stringify([]))
    UOSP.setDB("UOS_engineering1_DB",JSON.stringify([]))
    UOSP.setDB("UOS_engineering2_DB",JSON.stringify([]))
    UOSP.setDB("UOS_engineering3_DB",JSON.stringify([]))
    UOSP.setDB("UOS_engineering4_DB",JSON.stringify([]))
    UOSP.setDB("UOS_engineering5_DB",JSON.stringify([]))
    UOSP.setDB("UOS_engineering6_DB",JSON.stringify([]))
    UOSP.setDB("UOS_biz_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social8_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social9_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social10_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social11_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social12_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social13_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social14_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social15_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social16_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social17_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social18_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social19_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social20_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social21_DB",JSON.stringify([]))
    UOSP.setDB("UOS_social22_DB",JSON.stringify([]))
}




// JSON HTML '깨짐 방지코드
String.prototype.replaceAmp = function(){
    var res=this.toString();
    var tmp;
    while(tmp=/&#x....;/.exec(res)){
        res=res.replace(tmp[0],String.fromCharCode(parseInt(tmp[0].substr(3,4),16)));
    }
    while(tmp=/&#..;/.exec(res)){
        res=res.replace(tmp[0],String.fromCharCode(parseInt(tmp[0].substr(2,2))));
    }
    return res.replace(/&nbsp;/g,"\t").replace(/&gt;/g,">").replace(/&lt;/g,"<").replace(/&quot;/g,'"').replace(/&amp;/g,"&").replace(/&#034;/g,"\"");
}


//====================================== 카링 ======================================



const kalingModule=require("kaling.js").Kakao();

UOSP.kakaoReset = function kakaoReset(){
    Kakao = new kalingModule();
    //Kakao.init("29fbf6ec828f27d72544c39a3bb4f8d0"); // P.kakaoint자리(이전)
    Kakao.init("904c559bc0ec53c94df6dad990b24c52"); //
    //Kakao.init("e02397085dc52168fe675d7013e1cfbf"); // P.kakaoint자리

    Kakao.login(UOSP.getDB("kakaoId"), UOSP.getDB("kakaoPw"));
}

UOSP.sendKaling_universal_5list = function sendKaling_universal_5list(room,header,title,sub_title,link,mobile_link,THU,NEC){

    let kalingObj = {
        "link_ver":"4.0",
        "template_id" : (33176),
        "template_args" : {
            header_title : String(header[0]),
            header_mobile_link : String(header[1]),
            header_web_link : String(header[2]),
            header_title_THU : String(header[3]),
            header_title_imaga_x : String(header[4]),
            header_title_imaga_y : String(header[5]),
            title1 : String(title[0]),
            title2 : String(title[1]),
            title3 : String(title[2]),
            title4 : String(title[3]),
            title5 : String(title[4]),
            sub_title1 : String(sub_title[0]),
            sub_title2 : String(sub_title[1]),
            sub_title3 : String(sub_title[2]),
            sub_title4 : String(sub_title[3]),
            sub_title5 : String(sub_title[4]),
            link1 : String(link[0]),
            link2 : String(link[1]),
            link3 : String(link[2]),
            link4 : String(link[3]),
            link5 : String(link[4]),
            mobile_link1 : String(mobile_link[0]),
            mobile_link2 : String(mobile_link[1]),
            mobile_link3 : String(mobile_link[2]),
            mobile_link4 : String(mobile_link[3]),
            mobile_link5 : String(mobile_link[4]),
            THU1 : String(THU[0]),
            THU2 : String(THU[1]),
            THU3 : String(THU[2]),
            THU4 : String(THU[3]),
            THU5 : String(THU[4]),
            link : String(NEC[0]),
            mobile_link : String(NEC[1]),
            listRank : NEC[2] // true false
        }
    }
    try{
        Kakao.send(room, kalingObj, "custom");
    }catch(e){
        UOSP.kakaoReset();
        Kakao.send(room, kalingObj, "custom");
    }

}

UOSP.sendKaling_notice = function sendKaling_notice(room, title, URL, description, THU, head){
    let kalingObj = {
        "link_ver":"4.0",
        "template_id" : (33040),
        "template_args" : {
            title : title,
            URL : URL,
            description : description,
            THU : THU,
            head : head
        }
    }
    try{
        Kakao.send(room, kalingObj, "custom");
    }catch(e){
        UOSP.kakaoReset();
        Kakao.send(room, kalingObj, "custom");
    }
}

UOSP.sendKaling_5list = function sendKaling_5list(room, header_title, title, sub_title, path, THU){


    let kalingObj = {
        "link_ver":"4.0",
        "template_id" : (33106),
        "template_args" : {
            header_title : String(header_title),
            title1 : String(title[0]),
            title2 : String(title[1]),
            title3 : String(title[2]),
            title4 : String(title[3]),
            title5 : String(title[4]),
            path1 : String(path[0]),
            path2 : String(path[1]),
            path3 : String(path[2]),
            path4 : String(path[3]),
            path5 : String(path[4]),
            sub_title1 : String(sub_title[0]),
            sub_title2 : String(sub_title[1]),
            sub_title3 : String(sub_title[2]),
            sub_title4 : String(sub_title[3]),
            sub_title5 : String(sub_title[4]),
            THU1 : String(THU[0]),
            THU2 : String(THU[1]),
            THU3 : String(THU[2]),
            THU4 : String(THU[3]),
            THU5 : String(THU[4])
        }
    }
    try{
        Kakao.send(room, kalingObj, "custom");
    }catch(e){
        UOSP.kakaoReset();
        Kakao.send(room, kalingObj, "custom");
    }
}

UOSP.sendKaling_4list = function sendKaling_4list(room, header_title, title, sub_title, path, THU){


    let kalingObj = {
        "link_ver":"4.0",
        "template_id" : (33109),
        "template_args" : {
            header_title : String(header_title),
            title1 : String(title[0]),
            title2 : String(title[1]),
            title3 : String(title[2]),
            title4 : String(title[3]),
            path1 : String(path[0]),
            path2 : String(path[1]),
            path3 : String(path[2]),
            path4 : String(path[3]),
            sub_title1 : String(sub_title[0]),
            sub_title2 : String(sub_title[1]),
            sub_title3 : String(sub_title[2]),
            sub_title4 : String(sub_title[3]),
            THU1 : String(THU[0]),
            THU2 : String(THU[1]),
            THU3 : String(THU[2]),
            THU4 : String(THU[3])
        }
    }
    try{
        Kakao.send(room, kalingObj, "custom");
    }catch(e){
        UOSP.kakaoReset();
        Kakao.send(room, kalingObj, "custom");
    }
}

UOSP.sendKaling_3list = function sendKaling_3list(room, header_title, title, sub_title, path, THU){


    let kalingObj = {
        "link_ver":"4.0",
        "template_id" : (33111),
        "template_args" : {
            header_title : String(header_title),
            title1 : String(title[0]),
            title2 : String(title[1]),
            title3 : String(title[2]),
            path1 : String(path[0]),
            path2 : String(path[1]),
            path3 : String(path[2]),
            sub_title1 : String(sub_title[0]),
            sub_title2 : String(sub_title[1]),
            sub_title3 : String(sub_title[2]),
            THU1 : String(THU[0]),
            THU2 : String(THU[1]),
            THU3 : String(THU[2])
        }
    }
    try{
        Kakao.send(room, kalingObj, "custom");
    }catch(e){
        UOSP.kakaoReset();
        Kakao.send(room, kalingObj, "custom");
    }
}

UOSP.sendKaling_2list = function sendKaling_2list(room, header_title, title, sub_title, path, THU){


    let kalingObj = {
        "link_ver":"4.0",
        "template_id" : (33112),
        "template_args" : {
            header_title : String(header_title),
            title1 : String(title[0]),
            title2 : String(title[1]),
            path1 : String(path[0]),
            path2 : String(path[1]),
            sub_title1 : String(sub_title[0]),
            sub_title2 : String(sub_title[1]),
            THU1 : String(THU[0]),
            THU2 : String(THU[1])
        }
    }
    try{
        Kakao.send(room, kalingObj, "custom");
    }catch(e){
        UOSP.kakaoReset();
        Kakao.send(room, kalingObj, "custom");
    }
}

UOSP.sendKaling_1list = function sendKaling_1list(room, header_title, title, sub_title, path, THU){

    let kalingObj = {
        "link_ver":"4.0",
        "template_id" : (33113),
        "template_args" : {
            header_title : String(header_title),
            title1 : String(title[0]),
            path1 : String(path[0]),
            sub_title1 : String(sub_title[0]),
            THU1 : String(THU[0])
        }
    }
    try{
        Kakao.send(room, kalingObj, "custom");
    }catch(e){
        UOSP.kakaoReset();
        Kakao.send(room, kalingObj, "custom");
    }
}


//========================================= 카링 끝 =========================================

// 테이블 생성 : myDB.execSQL("create table UOSPTable (k text PRIMARY KEY, v text);");

UOSP.setDB = function setDB(key,value){
    if(D.selectForArray("UOSPTable", null, "k like ?", key).length == 0){ // 해당하는 key에 value가 없는 경우
        D.insert("UOSPTable",{k:key, v:value})
    }
    else{ // 해당하는 key에 value가 있는 경우
        D.update("UOSPTable", {v:value}, "k=?", [key])
    }
}


UOSP.getDB = function getDB(key){
    var arr = D.selectForArray("UOSPTable", null, "k=?", [key]);
    if (arr.length > 0) {
        return arr[0][1];
    } else {
        return undefined;
    }
}


UOSP.getNum = function getNum(key) {
    var value = UOSP.getDB(key);
    return isNaN(value) ? 0 : Number(UOSP.getDB(key));
}


module.exports = UOSP