UOSP = new Object()

var cacheModule={} // require 관련 변수

function require(src,force){
    if(!force && cacheModule[src]!=undefined){
        return cacheModule[src];
    }
    else{
        var module = {exports:{}}
        var exports=module.exports
        eval(readFile("node_modules/"+src))
        cacheModule[src] = module.exports;
        return module.exports
    }
}

D = require("DBManager.js")
var myDB = android.database.sqlite.SQLiteDatabase.openDatabase("/sdcard/katalkbot/Bots/main/DB", null, android.database.sqlite.SQLiteDatabase.CREATE_IF_NECESSARY);

// ================= 방 관련 변수들 ====================
const console_room_name = "시립봇4 컨트롤방" // 콘솔방 이름
var roomList = ["시립봇4 컨트롤방","노은총"]
var roomListNum = roomList.length


UOSP.UOSP1 = function UOSP1(){ // 일반공지 파싱
    let str = ""
    let SW_new = 0; // 새로운 공지가 파싱되었을 경우 1이됨

    let parse = org.jsoup.Jsoup.connect("http://www.uos.ac.kr/korNotice/list.do?list_id=FA1").get()
        .select("ul.listType>li:not(.on)>a").get(0) // 파싱 데이터 (상위공지)
    let title = parse.ownText() // 글 제목
    let adress = parse.attr("onclick").split("'")[3] // 글 주소

    if (title == "" || title == "MIWIFI" || title == undefined) { // 오류일시 종료
        return 0;
    }
    // DB구조 : [[공지제목,공지주소,날짜],[공지제목,공지주소,날짜]]
    let temp = JSON.parse(UOSP.getDB("UOSP1_DB"))
    let pre_DB = temp[temp.length-1] // 이전 DB 마지막 부분
    if ( pre_DB[0] != String(title).replaceAmp()) { // 새로운 내용이 파싱되었을 경우
        UOSP.UOSP1_collect(Number(pre_DB[1])+1,adress) // DB 기록작업
        SW_new = 1
    }

    if (SW_new == 1) {
        str += "일반 공지가 새로 게시되었습니다\n"
        str += title

        for(let i=0;i<Number(roomListNum);i++){
            try{UOSP.sendKaling_notice(String(roomList[i]),"일반공지알림",String("/korNotice/view.do?list_id=FA1&seq="+adress),"","",String(title))}
            catch(e){}
        }
    }
}

// http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq=7254
// 일반공지의 첫 공지주소번호는 7254
// DB구조 예시: [[공지제목,공지주소,날짜],[공지제목,공지주소,날짜]]
// 마지막 DB : JSON.parse(UOSP.getDB("UOSP1_DB"))[JSON.parse(UOSP.getDB("UOSP1_DB")).length-1]
// 검색코드 예시 : JSON.parse(UOSP.getDB("UOSP1_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes("전자"))
// 검색코드 예시 : JSON.parse(UOSP.getDB("UOSP1_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes("전자전기컴퓨터")).sort(function(a,b){return Number(a[1])>Number(b[1]) ? -1 : Number(a[1]) < Number(b[1]) ? 1 : 0}).map(v=>v[0]+" ("+v[2]+")\n- "+"http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq="+v[1]+"\n\n").join("").trim()
UOSP.UOSP1_collect = function UOSP1_collect(start_num,stop_num){

    let count_sucess = 0
    let count_failed = 0

    // 초기 DB 세팅 코드 : UOSP.setDB("UOSP1_DB",JSON.stringify([])) // 주의 : 건드리지 말 것
    var pre_DB = JSON.parse(UOSP.getDB("UOSP1_DB"))
    for(let i=Number(start_num);i<Number(stop_num)+1;i++){
        try{
            let body = org.jsoup.Jsoup.connect("http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq="+i).get()
            let title = body.select(".listType>li>span").get(0).ownText() // 글 제목
            let date = body.select(".listType>li>ul>li").get(2).ownText() // 글 게시일

            let array = [[String(title).replaceAmp()],[String(i)],[String(date)]]
            pre_DB.push(array)


            if(i%50==0){
                Api.replyRoom(console_room_name,i+"번 주소까지 진행 완료")
                java.lang.Thread.sleep(10000) // 200ms
                UOSP.setDB("UOSP1_DB",JSON.stringify(pre_DB))
                pre_DB = JSON.parse(UOSP.getDB("UOSP1_DB"))
            }
            count_sucess++
        }
        catch(e){count_failed++} // 해당 주소에 아무런 내용이 존재하지 않을 경우 아무것도 하지 않음
    }
    let temp = JSON.stringify(pre_DB)
    UOSP.setDB("UOSP1_DB",temp)
    return("성공 : "+count_sucess+"\n실패 : "+count_failed)

}


UOSP.UOSP1_search = function UOSP1_search(key){
    return JSON.parse(UOSP.getDB("UOSP1_DB")).filter(v=>String(v[0]).replace(/ /g,"").includes(key.replace(/ /g,""))).sort(function(a,b){return Number(a[1])>Number(b[1]) ? -1 : Number(a[1]) < Number(b[1]) ? 1 : 0})
        .map(v=>v[0]+" ("+v[2]+")\n- "+"http://www.uos.ac.kr/korNotice/view.do?list_id=FA1&seq="+v[1]+"\n\n").join("").trim().substr(0,200000)
}

//  학과공지 파싱
// 1: 전자전기컴퓨터공학부 2: 화학공학과 3: 기계정보공학과 4: 신소재공학과 5: 토목공학과 6: 컴퓨터과학부
// 7: 경영학부


UOSP.UOS_engineering = function UOS_engineering(opt){ // 공과대학 최신공지 제목을 파싱하여 어레이로 반환

    let return_array = []
    let SW_new = 0; // 새로운 공지가 파싱되었을 경우 1이됨

    let body
    if(opt=="1"){body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&").get()} // 전자전기컴퓨터공학부
    else if(opt=="2"){body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id").get()} // 화학공학과
    else if(opt=="3"){body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010059&epTicket=INV").get()} // 기계정보공학과
    else if(opt=="4"){body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010061&epTicket=INV").get()} // 신소재공학과
    else if(opt=="5"){body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010382&epTicket=INV").get()} // 토목공학과
    else if(opt=="6"){body = org.jsoup.Jsoup.connect("https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010383&epTicket=INV").get()} // 컴퓨터과학부

    let title = body.select(".tb-body").toArray().filter(v=>v.select("li.tb-wid01").text()!="[공지]")[0].select("li.tb-wid02").text()

    if (title == "" || title == "MIWIFI" || title == undefined) {return 0;} // 오류일시 종료

    let engineering_DB = JSON.parse(UOSP.getDB("UOS_engineering"+opt+"_DB"))

    // DB구조 : [공지제목,공지제목,공지제목]
    let pre_DB = engineering_DB[engineering_DB.length-1] // 이전 DB 마지막 부분

    if(pre_DB == undefined){ SW_new = 1 }
    else if ( pre_DB[1] != String(title).replaceAmp()) { SW_new = 1 } // 새로운 내용이 파싱되었을 경우 SW 1

    if (SW_new == 1) {
        return_array = [[String(opt)],[String(title)]]
        engineering_DB.push(return_array)
        UOSP.setDB("UOS_engineering"+opt+"_DB", JSON.stringify(engineering_DB))
        return return_array
    }
    return undefined
}


UOSP.UOS_biz = function UOS_biz(){ // 경영학부 공지 파싱 (어레이 반환)

    let return_array = []
    let SW_new = 0; // 새로운 공지가 파싱되었을 경우 1이됨
    let opt = "7"

    let body = org.jsoup.Jsoup.connect("https://biz.uos.ac.kr/korNotice/list.do?list_id=20008N2&epTicket=INV").get()

    let title = body.select(".listType>li:not(.on)>a").get(0).ownText()

    if (title == "" || title == "MIWIFI" || title == undefined) {return 0;} // 오류일시 종료

    let biz_DB = JSON.parse(UOSP.getDB("UOS_biz_DB"))

    // DB구조 : [공지제목,공지제목,공지제목]
    let pre_DB = biz_DB[biz_DB.length-1] // 이전 DB 마지막 부분

    if(pre_DB == undefined){ SW_new = 1 }
    else if ( pre_DB[1] != String(title).replaceAmp()) { SW_new = 1 } // 새로운 내용이 파싱되었을 경우 SW 1

    if (SW_new == 1) {
        return_array = [[String(opt)],[String(title)]]
        biz_DB.push(return_array)
        UOSP.setDB("UOS_biz_DB", JSON.stringify(biz_DB))
        return return_array
    }
    return undefined
}


UOSP.UOS_social = function UOS_social(opt){ // 정경대학 공지 (array 반환)

    let return_array = []
    let SW_new = 0; // 새로운 공지가 파싱되었을 경우 1이됨

    let body
    if(opt=="8"){body = org.jsoup.Jsoup.connect("https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000100002").get()} // 행정학과
    else if(opt=="9"){body = org.jsoup.Jsoup.connect("https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000010055&epTicket=ST-331538-EvseKnaZmrZZC4THhvDFMXvsK0UJXZfgCVQ-22").get()} // 국제관계학과
    else if(opt=="10"){body = org.jsoup.Jsoup.connect("https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000010057&epTicket=ST-331566-BHszXHC0b5FdFp1RjlWhASutG0tvCmiNkIE-22").get()} // 경제학부
    else if(opt=="11"){body = org.jsoup.Jsoup.connect("https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&seq=1946&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010072&epTicket=ST-331596-moOaQeUAwN1abnAplueCx7KOeWTjskUrALK-22").get()} // 사회복지학과
    else if(opt=="12"){body = org.jsoup.Jsoup.connect("https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&seq=1958&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010074&epTicket=ST-331603-QDYHuHqTOlcLyAXnnIYRKWTORGh77Cw2kj6-22").get()} // 세무학과

    let title = body.select(".tb-body").toArray().filter(v=>v.select("li.tb-wid01").text()!="[공지]")[0].select("li.tb-wid02").text()

    if (title == "" || title == "MIWIFI" || title == undefined) {return 0;} // 오류일시 종료

    let social_DB = JSON.parse(UOSP.getDB("UOS_social"+opt+"_DB"))

    // DB구조 : [공지제목,공지제목,공지제목]
    let pre_DB = social_DB[social_DB.length-1] // 이전 DB 마지막 부분

    if(pre_DB == undefined){ SW_new = 1 }
    else if ( pre_DB[1] != String(title).replaceAmp()) { SW_new = 1 } // 새로운 내용이 파싱되었을 경우 SW 1

    if (SW_new == 1) {
        return_array = [[String(opt)],[String(title)]]
        social_DB.push(return_array)
        UOSP.setDB("UOS_social"+opt+"_DB", JSON.stringify(social_DB))
        return return_array
    }
    return undefined
}


UOSP.UOS_temp_controller = function UOS_temp_controller(opt,mod){

    let result
    if(Number(opt)>0&&Number(opt)<7){result = UOSP.UOS_engineering(opt)}
    else if(Number(opt)==7){result = UOSP.UOS_biz()}
    if(Number(opt)>7&&Number(opt)<13){result = UOSP.UOS_social(opt)}

    let return_data
    if(result!=undefined || mod=="ON"){
        let pre_DB = JSON.parse(UOSP.getDB("UOSP_temp"))
        if(result!=undefined){pre_DB.push(result)}
        return_data = pre_DB
        UOSP.setDB("UOSP_temp",JSON.stringify(return_data))
    }

    let length
    try{length = return_data.length}
    catch(e){return 1}

    if(length==5||mod=="ON"){ // 데이터가 5개가 쌓이면 리턴을 하지 않고 그냥 바로 공지로 내보냄

        let title
        try{title = return_data.map(v=>v[1])}
        catch(e){return 2}

        let URL = []
        let sub_title = []
        for(let i=0;i<5;i++){
            if(return_data[i]==undefined){
                URL[i] = String("")
                sub_title[i] = String("")
                title[i] = String("")
            }
            else if(return_data[i][0]=="1"){
                URL[i] = String("redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&")
                sub_title[i] = String("전자전기컴퓨터공학부")
            }
            else if(return_data[i][0]=="2"){
                URL[i] = String("redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id")
                sub_title[i] = String("화학공학과")
            }
            else if(return_data[i][0]=="3"){
                URL[i] = String("redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010059&epTicket=INV")
                sub_title[i] = String("기계정보공학과")
            }
            else if(return_data[i][0]=="4"){
                URL[i] = String("redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010061&epTicket=INV")
                sub_title[i] = String("신소재공학과")
            }
            else if(return_data[i][0]=="5"){
                URL[i] = String("redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010382&epTicket=INV")
                sub_title[i] = String("토목공학과")
            }
            else if(return_data[i][0]=="6"){
                URL[i] = String("redirect_UOS?tourl=https://www.uos.ac.kr/engineering/korNotice/allList.do?list_id=20013DA1&cate_id2=000010383&epTicket=INV")
                sub_title[i] = String("컴퓨터과학부")
            }
            else if(return_data[i][0]=="7"){
                URL[i] = String("redirect_UOS?tourl=https://biz.uos.ac.kr/korNotice/list.do?list_id=20008N2&epTicket=INV")
                sub_title[i] = String("경영학부")
            }
            else if(return_data[i][0]=="8"){
                URL[i] = String("redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000100002")
                sub_title[i] = String("행정학과")
            }
            else if(return_data[i][0]=="9"){
                URL[i] = String("redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000010055&epTicket=ST-331538-EvseKnaZmrZZC4THhvDFMXvsK0UJXZfgCVQ-22")
                sub_title[i] = String("국제관계학과")
            }
            else if(return_data[i][0]=="10"){
                URL[i] = String("redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&cate_id2=000010057&epTicket=ST-331566-BHszXHC0b5FdFp1RjlWhASutG0tvCmiNkIE-22")
                sub_title[i] = String("경제학부")
            }
            else if(return_data[i][0]=="11"){
                URL[i] = String("redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&seq=1946&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010072&epTicket=ST-331596-moOaQeUAwN1abnAplueCx7KOeWTjskUrALK-22")
                sub_title[i] = String("사회복지학과")
            }
            else if(return_data[i][0]=="12"){
                URL[i] = String("redirect_UOS?tourl=https://social.uos.ac.kr/social/korNotice/allList.do?list_id=econo01&seq=1958&sort=0&pageIndex=1&searchCnd=&searchWrd=&viewAuth=Y&cate_id2=000010074&epTicket=ST-331603-QDYHuHqTOlcLyAXnnIYRKWTORGh77Cw2kj6-22")
                sub_title[i] = String("세무학과")
            }

        }
        let THU = ""
        let header_title = "학과공지"

        if(mod!="ON"){
            for(let i=0;i<Number(roomListNum);i++){
                try{UOSP.sendKaling_5list_uos(String(roomList[i]), header_title, title, sub_title, URL, THU)}
                catch(e){}
            }
        }
        else if(mod=="ON"){
            for(let i=0;i<Number(roomListNum);i++){
                try{
                    if(length==1){UOSP.sendKaling_1list_uos(String(roomList[i]), header_title, title, sub_title, URL, THU)}
                    else if(length==2){UOSP.sendKaling_2list_uos(String(roomList[i]), header_title, title, sub_title, URL, THU)}
                    else if(length==3){UOSP.sendKaling_3list_uos(String(roomList[i]), header_title, title, sub_title, URL, THU)}
                    else if(length==4){UOSP.sendKaling_4list_uos(String(roomList[i]), header_title, title, sub_title, URL, THU)}
                    else if(length==5){UOSP.sendKaling_5list_uos(String(roomList[i]), header_title, title, sub_title, URL, THU)}
                }
                catch(e){
                    /*
                    Api.replyRoom(console_room_name, "Kaling Error\n" + e + "\n" + e.stack + "\n" + e.rhinoException);
                    Api.replyRoom(console_room_name,"roomList : "+roomList[i])
                    Api.replyRoom(console_room_name,"title : "+title)
                    Api.replyRoom(console_room_name,"sub_title : "+sub_title)
                    Api.replyRoom(console_room_name,"path : "+URL)

                     */
                }
            }
        }


        UOSP.setDB("UOSP_temp",JSON.stringify([]))
        return undefined
    }
    return return_data
}





// JSON HTML '깨짐 방지코드
String.prototype.replaceAmp = function(){
    var res=this.toString();
    var tmp;
    while(tmp=/&#x....;/.exec(res)){
        res=res.replace(tmp[0],String.fromCharCode(parseInt(tmp[0].substr(3,4),16)));
    }
    while(tmp=/&#..;/.exec(res)){
        res=res.replace(tmp[0],String.fromCharCode(parseInt(tmp[0].substr(2,2))));
    }
    return res.replace(/&nbsp;/g,"\t").replace(/&gt;/g,">").replace(/&lt;/g,"<").replace(/&quot;/g,'"').replace(/&amp;/g,"&").replace(/&#034;/g,"\"");
}


//====================================== 카링 ======================================



const kalingModule=require("kaling.js").Kakao();

UOSP.kakaoReset = function kakaoReset(){
    Kakao = new kalingModule();
    //Kakao.init("29fbf6ec828f27d72544c39a3bb4f8d0"); // P.kakaoint자리(이전)
    Kakao.init("904c559bc0ec53c94df6dad990b24c52"); //
    //Kakao.init("e02397085dc52168fe675d7013e1cfbf"); // P.kakaoint자리

    Kakao.login(UOSP.getDB("kakaoId"), UOSP.getDB("kakaoPw"));
}

UOSP.sendKaling_notice = function sendKaling_notice(room, title, URL, description, THU, head){
    let kalingObj = {
        "link_ver":"4.0",
        "template_id" : (33040),
        "template_args" : {
            title : title,
            URL : URL,
            description : description,
            THU : THU,
            head : head
        }
    }
    try{
        Kakao.send(room, kalingObj, "custom");
    }catch(e){
        UOSP.kakaoReset();
        Kakao.send(room, kalingObj, "custom");
    }
}

UOSP.sendKaling_5list = function sendKaling_5list_uos(room, header_title, title, sub_title, path, THU){


    let kalingObj = {
        "link_ver":"4.0",
        "template_id" : (33106),
        "template_args" : {
            header_title : String(header_title),
            title1 : String(title[0]),
            title2 : String(title[1]),
            title3 : String(title[2]),
            title4 : String(title[3]),
            title5 : String(title[4]),
            path1 : String(path[0]),
            path2 : String(path[1]),
            path3 : String(path[2]),
            path4 : String(path[3]),
            path5 : String(path[4]),
            sub_title1 : String(sub_title[0]),
            sub_title2 : String(sub_title[1]),
            sub_title3 : String(sub_title[2]),
            sub_title4 : String(sub_title[3]),
            sub_title5 : String(sub_title[4]),
            THU : String(THU)
        }
    }
    try{
        Kakao.send(room, kalingObj, "custom");
    }catch(e){
        UOSP.kakaoReset();
        Kakao.send(room, kalingObj, "custom");
    }
}

UOSP.sendKaling_4list = function sendKaling_4list_uos(room, header_title, title, sub_title, path, THU){


    let kalingObj = {
        "link_ver":"4.0",
        "template_id" : (33109),
        "template_args" : {
            header_title : String(header_title),
            title1 : String(title[0]),
            title2 : String(title[1]),
            title3 : String(title[2]),
            title4 : String(title[3]),
            path1 : String(path[0]),
            path2 : String(path[1]),
            path3 : String(path[2]),
            path4 : String(path[3]),
            sub_title1 : String(sub_title[0]),
            sub_title2 : String(sub_title[1]),
            sub_title3 : String(sub_title[2]),
            sub_title4 : String(sub_title[3]),
            THU : String(THU)
        }
    }
    try{
        Kakao.send(room, kalingObj, "custom");
    }catch(e){
        UOSP.kakaoReset();
        Kakao.send(room, kalingObj, "custom");
    }
}

UOSP.sendKaling_3list = function sendKaling_3list_uos(room, header_title, title, sub_title, path, THU){


    let kalingObj = {
        "link_ver":"4.0",
        "template_id" : (33111),
        "template_args" : {
            header_title : String(header_title),
            title1 : String(title[0]),
            title2 : String(title[1]),
            title3 : String(title[2]),
            path1 : String(path[0]),
            path2 : String(path[1]),
            path3 : String(path[2]),
            sub_title1 : String(sub_title[0]),
            sub_title2 : String(sub_title[1]),
            sub_title3 : String(sub_title[2]),
            THU : String(THU)
        }
    }
    try{
        Kakao.send(room, kalingObj, "custom");
    }catch(e){
        UOSP.kakaoReset();
        Kakao.send(room, kalingObj, "custom");
    }
}

UOSP.sendKaling_2list = function sendKaling_2list_uos(room, header_title, title, sub_title, path, THU){


    let kalingObj = {
        "link_ver":"4.0",
        "template_id" : (33112),
        "template_args" : {
            header_title : String(header_title),
            title1 : String(title[0]),
            title2 : String(title[1]),
            path1 : String(path[0]),
            path2 : String(path[1]),
            sub_title1 : String(sub_title[0]),
            sub_title2 : String(sub_title[1]),
            THU : String(THU)
        }
    }
    try{
        Kakao.send(room, kalingObj, "custom");
    }catch(e){
        UOSP.kakaoReset();
        Kakao.send(room, kalingObj, "custom");
    }
}

UOSP.sendKaling_1list = function sendKaling_1list_uos(room, header_title, title, sub_title, path, THU){

    let kalingObj = {
        "link_ver":"4.0",
        "template_id" : (33113),
        "template_args" : {
            header_title : String(header_title),
            title1 : String(title[0]),
            path1 : String(path[0]),
            sub_title1 : String(sub_title[0]),
            THU : String(THU)
        }
    }
    try{
        Kakao.send(room, kalingObj, "custom");
    }catch(e){
        UOSP.kakaoReset();
        Kakao.send(room, kalingObj, "custom");
    }
}


//========================================= 카링 끝 =========================================

// 테이블 생성 : myDB.execSQL("create table UOSPTable (k text PRIMARY KEY, v text);");

UOSP.setDB = function setDB(key,value){
    if(D.selectForArray("UOSPTable", null, "k like ?", key).length == 0){ // 해당하는 key에 value가 없는 경우
        D.insert("UOSPTable",{k:key, v:value})
    }
    else{ // 해당하는 key에 value가 있는 경우
        D.update("UOSPTable", {v:value}, "k=?", [key])
    }
}


UOSP.getDB = function getDB(key){
    var arr = D.selectForArray("UOSPTable", null, "k=?", [key]);
    if (arr.length > 0) {
        return arr[0][1];
    } else {
        return undefined;
    }
}


UOSP.getNum = function getNum(key) {
    var value = UOSP.getDB(key);
    return isNaN(value) ? 0 : Number(UOSP.getDB(key));
}


module.exports = UOSP