module.exports=(function(){
    //const P=require("Parameter.js");
    // Parameter 주석처리됨에 유의
    function getMenu(tr,isNSB){//학생식당, 자연과학관용, 가격표기 X
        var raw = String(tr.select('td.al').html()).replace(/<br>/g,'\n').replaceAmp();
        var corners = raw.split(/(?=코너 .)/);
        var res = {};
        //var short = '';
        if(!isNSB){
            for(var i in corners){
                var cornerName = /코너 (.)/.exec(corners[i]);
                //cornerName = (cornerName && cornerName[1]) || 'F'; //학생식당 A~E, 자연과학관 F
                cornerName = (cornerName && cornerName[1]); //학생식당 A~E, 자연과학관 F
                if(cornerName==null) continue;
                if(cornerName == 'A'){
                    var full = corners[i];
                    var short = full.split('\n').filter(v=>/\d\d\d원/.test(v)).map(v=>v.replace(/\(.+?\)/g,"").replace(/\d.+?원/g,"").rmspace()).join(", ");
                    res[cornerName] = {full : full,   short : short};
                }else{
                    var full = corners[i];
                    var lines = full.split('\n');
                    var short;
                    for(var j in lines){
                        //if(!/코너|중식|석식|\d\d:\d\d|\d원/.test(lines[j])){
                        if(!/코너|중식|석식/.test(lines[j]) && /^[가-힣 \[\]]/.test(lines[j])){
                            short = lines[j];
                            break;
                        }
                    }
                    //if(cornerName == 'F') res = {full : full, short : short};
                    res[cornerName] = {full : full, short : short};
                }
            }
        }else{
            var full = corners[0];
            var lines = full.split('\n');
            var short="";
            for(var j in lines){
                //if(!/코너|중식|석식|\d\d:\d\d|\d원/.test(lines[j])){
                if(!/코너|중식|석식/.test(lines[j]) && /^[가-힣 \[\]]/.test(lines[j])){
                    short = lines[j];
                    break;
                }
            }
            res = {full : full, short : short};
            //else res[cornerName] = {full : full, short : short};
        }
        return res;
    }
    function getMenu2(tr,tr2){//아느칸, 생활관용, 가격표기 O
        var raw = String(tr.select('td.al').html()).replace(/<br>/g,'\n').replaceAmp();
        var raw2 = tr2 ? String(tr2.select('td.al').html()).replace(/<br>/g,'\n').replaceAmp() : null;
        var res = {};

        var full = raw;
        //var short = full.split('\n').filter(v=>/\d\d\d원/.test(v)).map(v=>v.replace(/\(.+?\)/g,"").rmspace()).join("\n");
        var menuName="";
        var price="";
        var short=[];
        full.split("\n").forEach(v=>{
            menuName=/[가-힣][가-힣 ,*]+[가-힣]/.exec(v) || menuName;
            if(price=/[\d,]+원/.exec(v)){
                short.push(menuName+" "+price)
            }
        });
        short = short.join("\n");
        res = {full : full + (raw2 ? ("\n\n\n"+raw2) : ""),   short : short};
        return res;
    }
    function getFullStudentHall(){
        var raw = org.jsoup.Jsoup.connect('http://uos.ac.kr/food/placeList.do').get().select('div.listType02.type2#week tr');
        var res={};
        try{
            for(var i=0; i<raw.size()/3; i++){
                var day = /\((.)\)/.exec(raw.get(3*i).select('th[rowspan]').text())[1];
                res[day] = {
                    breakfast : getMenu(raw.get(3*i),false),
                    lunch : getMenu(raw.get(3*i+1),false),
                    dinner : getMenu(raw.get(3*i+2),false)
                }
            }
        }catch(e){
            return null;
        }
        return res;
    }

    function getFullNaturalScienceBuilding(){
        var raw = org.jsoup.Jsoup.connect('http://uos.ac.kr/food/placeList.do?rstcde=040').get().select('div.listType02.type2#week tr');
        var res={};
        try{
            for(var i=0; i<raw.size()/3; i++){
                var day = /\((.)\)/.exec(raw.get(3*i).select('th[rowspan]').text())[1];
                res[day] = {
                    lunch : getMenu(raw.get(3*i+1),true),
                    dinner : getMenu(raw.get(3*i+2),true)
                }
            }
        }catch(e){
            return null;
        }
        return res;
    }

    function getFullAneukan(){
        var raw = org.jsoup.Jsoup.connect('http://uos.ac.kr/food/placeList.do?rstcde=030').get().select('div.listType02.type2#week tr');
        var res={};
        try{
            for(var i=0; i<raw.size()/3; i++){
                var day = /\((.)\)/.exec(raw.get(3*i).select('th[rowspan]').text())[1];
                res[day] = {
                    lunch : getMenu2(raw.get(3*i+1)),
                    dinner : getMenu2(raw.get(3*i+2))
                }
            }
        }catch(e){
            return null;
        }
        return res;
    }

    function getFullDormitory(){
        var raw = org.jsoup.Jsoup.connect('http://uos.ac.kr/food/placeList.do?rstcde=050').get().select('div.listType02.type2#week tr');
        var res={};
        try{
            for(var i=0; i<raw.size()/3; i++){
                var day = /\((.)\)/.exec(raw.get(3*i).select('th[rowspan]').text())[1];
                res[day] = {
                    breakfast : getMenu2(raw.get(3*i),raw.get(3*i+2)),
                    lunch : getMenu2(raw.get(3*i+1),raw.get(3*i+2))
                }
            }
        }catch(e){
            return null;
        }
        return res;
    }

    function getWeb(){
        return "[세트메뉴]\n\
불고기버거 세트 : 3,800원\n\
치즈버거 세트 : 3,800원\n\
불감자버거 세트 : 4,100원\n\
새우버거 세트 : 4,100원\n\
웹버거세트 : 4,400원\n\
칠리토마토베이컨버거 세트 : 4,600원\n\
스파이시치킨 텐더버거 세트 : 4,800원\n\
치킨스트립 세트 : 4,600원\n\
베이컨더블치즈버거 세트 : 4,900원\n\
치즈스틱 교환 : 200원\n\
컵치킨콤보(순살치킨+콜라) : 4,700원\n\
치즈추가 : 300원"
    }

    function getHaksik(msg){
        if(msg=="/웹") return getWeb();
        var caf = (msg.includess("양식당","아느칸","ㅇㄴㅋ")) ? 8 : (msg.includess("생활관","기숙사","기식")) ? 4 :
            (msg.includess("학식","ㅎㅅ")) ? 3 : (msg.includess("학관","학생회관")) ? 2 : (msg.includess("자과관","자연과학관")) ? 1 : 3;
        var date = new Date();
        var res = "";
        res = "" + (date.getMonth() + 1) + "월 " + date.getDate() + "일 (" + ["일","월","화","수","목","금","토"][date.getDay()] + ") "
            + date.getHours() + "시 " + date.getMinutes() + "분 ";

        var bld =    (msg.includes("조식") || msg.includes("아침")) ? 1 :
            (msg.includes("중식") || msg.includes("점심")) ? 2 :
                (msg.includes("석식") || msg.includes("저녁")) ? 4 : 0;// [dinner,lunch,breakfast]
        if (bld == 0) {
            if(caf & 8)       bld = (date.getHours() >= 14 && date.getHours() < 19) ? 4 : 2; //아느칸은 시간대에 따라 점심,저녁출력
            else if(caf & 4)    bld = 2; //생활관은 점심 고정으로 출력
            else if(caf & 2)   bld = 7; //학식이 포함되어 있으면 아침,점심,저녁 전부 출력
            else             bld = 6; //자과관은 점심,저녁 출력
        }
        var day_num;
        if (msg.includes("오늘"))       {   res += ("오늘의 ");    day_num = date.getDay();   }
        else if (msg.includes("내일"))    {   res += ("내일의 ");    day_num = date.getDay() + 1;}
        else if (msg.includes("월"))    {   res += ("월요일 ");   day_num = 1;            }
        else if (msg.includes("화"))    {   res += ("화요일 ");   day_num = 2;            }
        else if (msg.includes("수"))    {   res += ("수요일 ");   day_num = 3;            }
        else if (msg.includes("목"))    {   res += ("목요일 ");   day_num = 4;            }
        else if (msg.includes("금"))    {   res += ("금요일 ");   day_num = 5;            }
        else if (msg.includes("토"))    {   res += ("토요일 ");   day_num = 6;            }
        else if (msg.includes("일"))    {   res += ("일요일 ");   day_num = 0;            }
        else {
            if (date.getHours() >= 19)    {   res += ("내일의 ");   day_num = date.getDay() + 1;}
            else                   {   res += ("오늘의 ");   day_num = date.getDay();   }
        }
        switch (caf) {
            case 1:   res += "자과관\n";   break;
            case 2:   res += "학관\n";      break;
            case 3:   res += "학식\n";      break;
            case 4:   res += "기식\n";      break;
            case 8:   res += "아느칸\n";   break;
        }
        var day=["일","월","화","수","목","금","토"][day_num];
        if (caf == 4 && day_num == 7)                     res += "일요일 시간표는 내일 업데이트 됩니다.";
        else if (caf != 4 && (day_num == 0 || day_num == 6 || day_num == 7))   res += "주말에는 학식이 제공되지 않습니다.";
        else{
            try{
                switch (caf) {
                    case 1:   {
                        var tmp = getFullNaturalScienceBuilding();
                        if(tmp){
                            if(bld & 2) res += "--- 점심 ---\n" + tmp[day].lunch.short + "\n";
                            if(bld & 4) res += "--- 저녁 ---\n" + tmp[day].dinner.short + "\n";
                            res = res.rmspace() + String.blank(500)+"\n\n\n";
                            if(bld & 2) res += "--- 점심 ---\n\n" + tmp[day].lunch.full + "\n";
                            if(bld & 4) res += "--- 저녁 ---\n\n" + tmp[day].dinner.full + "\n";
                        } else res += "학식정보가 조회되지 않습니다.";
                        break;
                    }
                    case 2:   {
                        var tmp = getFullStudentHall();
                        if(tmp){
                            if(bld & 1) res += "--- 아침 ---\n" + Object.getOwnPropertyNames(ObjHier(tmp,day,"breakfast",{})).map(v=>"코너 "+v+" : "+tmp[day].breakfast[v].short).join("\n") + "\n";
                            if(bld & 2) res += "--- 점심 ---\n" + Object.getOwnPropertyNames(ObjHier(tmp,day,"lunch",{})).map(v=>"코너 "+v+" : "+tmp[day].lunch[v].short).join("\n") + "\n";
                            if(bld & 4) res += "--- 저녁 ---\n" + Object.getOwnPropertyNames(ObjHier(tmp,day,"dinner",{})).map(v=>"코너 "+v+" : "+tmp[day].dinner[v].short).join("\n") + "\n";
                            res = res.rmspace() + String.blank(500)+"\n\n\n";
                            if(bld & 1) res += "--- 아침 ---\n\n" + Object.getOwnPropertyNames(ObjHier(tmp,day,"breakfast",{})).map(v=>"코너 "+v+" : "+tmp[day].breakfast[v].full).join("\n") + "\n";
                            if(bld & 2) res += "--- 점심 ---\n\n" + Object.getOwnPropertyNames(ObjHier(tmp,day,"lunch",{})).map(v=>"코너 "+v+" : "+tmp[day].lunch[v].full).join("\n") + "\n";
                            if(bld & 4) res += "--- 저녁 ---\n\n" + Object.getOwnPropertyNames(ObjHier(tmp,day,"dinner",{})).map(v=>"코너 "+v+" : "+tmp[day].dinner[v].full).join("\n") + "\n";
                        } else res += "학식정보가 조회되지 않습니다.";
                        break;
                    }
                    case 3:   {
                        var tmp = getFullStudentHall();
                        var tmp2 = getFullNaturalScienceBuilding();
                        if(tmp || tmp2){
                            if(bld & 1) res += tmp ? ("--- 아침 ---\n"  + Object.getOwnPropertyNames(ObjHier(tmp,day,"breakfast",{})).map(v=>"코너 "+v+" : "+tmp[day].breakfast[v].short).join("\n") + "\n") : "";
                            if(bld & 2) res += "--- 점심 ---\n" + (tmp ? (Object.getOwnPropertyNames(ObjHier(tmp,day,"lunch",{})).map(v=>"코너 "+v+" : "+tmp[day].lunch[v].short).join("\n") + "\n") : "")
                                + (tmp2 ? ("자과관 : " + ObjHier(tmp2,day,"lunch","short","") + "\n") : "");
                            if(bld & 4) res += "--- 저녁 ---\n" + (tmp ? (Object.getOwnPropertyNames(ObjHier(tmp,day,"dinner",{})).map(v=>"코너 "+v+" : "+tmp[day].dinner[v].short).join("\n") + "\n") : "")
                                + (tmp2 ? ("자과관 : " + ObjHier(tmp2,day,"dinner","short","") + "\n") : "");
                            res = res.rmspace() + String.blank(500)+"\n\n\n";
                            if(bld & 1) res += tmp ? ("--- 아침 ---\n\n" + Object.getOwnPropertyNames(ObjHier(tmp,day,"breakfast",{})).map(v=>tmp[day].breakfast[v].full).join("\n") + "\n") : "";
                            if(bld & 2) res += "--- 점심 ---\n\n" + (tmp ? (Object.getOwnPropertyNames(ObjHier(tmp,day,"lunch",{})).map(v=>tmp[day].lunch[v].full).join("\n") + "\n") : "")
                                + (tmp2 ? ("자과관\n" + ObjHier(tmp2,day,"lunch","full","") + "\n") : "");
                            if(bld & 4) res += "--- 저녁 ---\n\n" + (tmp ? (Object.getOwnPropertyNames(ObjHier(tmp,day,"dinner",{})).map(v=>tmp[day].dinner[v].full).join("\n") + "\n") : "")
                                + (tmp2 ? ("자과관\n" + ObjHier(tmp2,day,"dinner","full","") + "\n") : "");
                        } else res += "학식정보가 조회되지 않습니다.";
                        break;
                    }
                    case 4:   {
                        var tmp = getFullDormitory();
                        if(tmp){
                            if(bld & 1) res += "--- 아침 ---\n" + tmp[day].breakfast.short + "\n";
                            if(bld & 6) res += "--- 점심, 저녁 ---\n" + tmp[day].lunch.short + "\n";
                            res = res.rmspace() + String.blank(500)+"\n\n\n";
                            if(bld & 1) res += "--- 아침 ---\n\n" + tmp[day].breakfast.full + "\n";
                            if(bld & 6) res += "--- 점심, 저녁 ---\n\n" + tmp[day].lunch.full + "\n";
                        } else res += "학식정보가 조회되지 않습니다.";
                        break;
                    }
                    case 8:   {
                        var tmp = getFullAneukan();
                        if(tmp){
                            if(bld & 3) res += "--- 점심 ---\n" + tmp[day].lunch.short + "\n";
                            if(bld & 4) res += "--- 저녁 ---\n" + tmp[day].dinner.short + "\n";
                            res = res.rmspace() + String.blank(500)+"\n\n\n";
                            if(bld & 3) res += "--- 점심 ---\n\n" + tmp[day].lunch.full + "\n";
                            if(bld & 4) res += "--- 저녁 ---\n\n" + tmp[day].dinner.full + "\n";
                        } else res += "학식정보가 조회되지 않습니다.";
                        break;
                    }
                }
            }catch(e){
                res += "학식정보가 조회되지 않습니다.";
                Api.replyRoom(P.adminName,"학식에러 발생\n"+e+'\n'+e.stack+'\nmsg:'+msg);
            }
        }

        return res;
    }
    function ObjHier(/*depature, attr0, attr1, ..., failReturn*/) {
        var args = arguments;
        var ptr = args[0];
        var next;
        for (var i = 1; i < args.length - 1; i++) {
            next = ptr[args[i]];
            if (next) {
                ptr = next;
            } else {
                return args[args.length - 1];
            }
        }
        return ptr;
    }

    function toString(){
        return "Haksik";
    }

    return {
        getHaksik:getHaksik,
        toString:toString
    };
})();